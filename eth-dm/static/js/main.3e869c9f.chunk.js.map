{"version":3,"sources":["../../../src/index.ts","../../../../../src/lib/waku_relay/index.ts","../../../../../../src/proto/waku/v2/message.ts","../../../../../src/lib/waku_message/version_1.ts","../../../../../../src/lib/waku_message/symmetric/index.ts","../../../../../src/lib/waku_message/index.ts","../../../../../src/lib/waku_relay/constants.ts","../../../../src/lib/utils.ts","../../../../../src/lib/waku_light_push/index.ts","../../../../../../src/proto/waku/v2/light_push.ts","../../../../src/lib/select_peer.ts","../../../../../src/lib/waku_relay/get_relay_peers.ts","../../../../../src/lib/waku_store/index.ts","../../../../../../src/proto/waku/v2/store.ts","../../../../../../src/proto/chat/v2/chat_message.ts","../../../../../../src/lib/waku_message/symmetric/browser.ts","../../../../../../src/lib/waku_message/symmetric/node.ts","../../../../src/lib/discover.ts","../../../../src/lib/waku.ts","../../../../../src/lib/waku_relay/relay_heartbeat.ts","../../../../../src/lib/waku_light_push/push_rpc.ts","../../../../../src/lib/waku_store/history_rpc.ts","../../../../../src/lib/chat_message/index.ts","../../../../src/proto/index.ts","key_pair_handling/key_pair_storage.ts","key_pair_handling/LoadKeyPair.tsx","key_pair_handling/SaveKeyPair.tsx","messaging/wire.ts","crypto.ts","key_pair_handling/PasswordInput.tsx","key_pair_handling/KeyPairHandling.tsx","waku.ts","BroadcastPublicKey.tsx","messaging/Messages.tsx","messaging/SendMessage.tsx","messaging/Messaging.tsx","App.tsx","index.tsx"],"names":["message","global","buffer_1","Buffer","buf","readUIntLE","e","exports","writer","i","globalThis","a","gossipsub","outbound","ethDmKeyPair","password","encryptKey","salt","iv","cipher","data","bufToHex","localStorage","setItem","JSON","stringify","str","getItem","parse","hexToBuf","decryptKey","getKeyMaterial","enc","TextEncoder","window","crypto","subtle","importKey","encode","name","getWrapKey","keyMaterial","deriveKey","iterations","hash","length","getRandomValues","Uint8Array","wrappingKey","encodedKeyPair","encrypt","cipherKeyPair","key","decrypt","decrypted","dec","TextDecoder","decode","LoadKeyPair","disabled","setEthDmKeyPair","Button","variant","color","onClick","loadKeyPairFromStorage","then","keyPair","console","log","SaveKeyPair","saveKeyPairToStorage","Root","protobuf","Type","Field","PublicKeyMessage","payload","create","this","finish","ethDmPublicKey","ethAddress","signature","bytes","add","define","DirectMessage","toAddress","privateKey","generatePrivateKey","publicKey","getPublicKey","web3Signer","getAddress","signMessage","formatPublicKeyForSignature","PasswordInput","setPassword","TextField","id","label","type","onChange","event","target","value","useStyles","makeStyles","root","textAlign","display","alignItems","flexDirection","margin","generate","storage","loadSave","loadSaveButton","KeyPairHandling","classes","useState","className","generateEthDmKeyPair","catch","error","p","PublicKeyContentTopic","DirectMessageContentTopic","Waku","waku","getStatusFleetNodes","nodes","forEach","addr","dial","Promise","resolve","reject","setTimeout","libp2p","connectionManager","on","handlePublicKeyMessage","myAddress","setter","msg","publicKeyMsg","equalByteArrays","res","formattedMsg","sigAddress","ethers","utils","verifyMessage","validatePublicKeyMessage","prevPks","set","Map","handleDirectMessage","address","wakuMsg","directMessage","timestamp","Date","prevMsgs","copy","slice","push","text","BroadcastPublicKey","signer","setPublicKeyMsg","encodePublicKeyWakuMessage","lightPush","createPublicKeyMessage","publicKeyMessage","WakuMessage","fromBytes","contentTopic","Messages","messages","List","dense","map","formatDisplayDate","ListItem","ListItemText","primary","toLocaleString","month","day","hour","minute","hour12","theme","formControl","spacing","minWidth","selectEmpty","marginTop","SendMessage","recipients","recipient","setRecipient","setMessage","items","Array","from","keys","MenuItem","keyDownHandler","altKey","ctrlKey","shiftKey","get","sendMessage","style","flexWrap","FormControl","InputLabel","Select","labelId","onKeyDown","directMsg","encPublicKey","recipientAddress","recipientPublicKey","callback","encodeEncryptedWakuMessage","isSuccess","Messaging","createMuiTheme","palette","main","purple","secondary","teal","minHeight","appBar","container","flex","wakuStatus","marginRight","title","flexGrow","peers","App","setWaku","setSigner","publicKeys","setPublicKeys","setMessages","setAddress","useEffect","ethereum","request","method","accounts","_provider","providers","Web3Provider","getSigner","initWaku","_waku","observerPublicKeyMessage","bind","relay","addObserver","deleteObserver","addDecryptionPrivateKey","deleteDecryptionPrivateKey","observerDirectMessage","relayPeers","lightPushPeers","getPeers","size","addressDisplay","substr","ThemeProvider","AppBar","position","Toolbar","IconButton","edge","aria-label","undefined","green","Typography","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3e869c9f.chunk.js","sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.proto = exports.StoreCodec = exports.WakuStore = exports.Direction = exports.RelayCodec = exports.WakuRelay = exports.PushResponse = exports.LightPushCodec = exports.WakuLightPush = exports.ChatMessage = exports.WakuMessage = exports.Waku = exports.utils = exports.Protocol = exports.Environment = exports.getStatusFleetNodes = void 0;\nvar discover_1 = require(\"./lib/discover\");\nObject.defineProperty(exports, \"getStatusFleetNodes\", { enumerable: true, get: function () { return discover_1.getStatusFleetNodes; } });\nObject.defineProperty(exports, \"Environment\", { enumerable: true, get: function () { return discover_1.Environment; } });\nObject.defineProperty(exports, \"Protocol\", { enumerable: true, get: function () { return discover_1.Protocol; } });\nexports.utils = __importStar(require(\"./lib/utils\"));\nvar waku_1 = require(\"./lib/waku\");\nObject.defineProperty(exports, \"Waku\", { enumerable: true, get: function () { return waku_1.Waku; } });\nvar waku_message_1 = require(\"./lib/waku_message\");\nObject.defineProperty(exports, \"WakuMessage\", { enumerable: true, get: function () { return waku_message_1.WakuMessage; } });\nvar chat_message_1 = require(\"./lib/chat_message\");\nObject.defineProperty(exports, \"ChatMessage\", { enumerable: true, get: function () { return chat_message_1.ChatMessage; } });\nvar waku_light_push_1 = require(\"./lib/waku_light_push\");\nObject.defineProperty(exports, \"WakuLightPush\", { enumerable: true, get: function () { return waku_light_push_1.WakuLightPush; } });\nObject.defineProperty(exports, \"LightPushCodec\", { enumerable: true, get: function () { return waku_light_push_1.LightPushCodec; } });\nObject.defineProperty(exports, \"PushResponse\", { enumerable: true, get: function () { return waku_light_push_1.PushResponse; } });\nvar waku_relay_1 = require(\"./lib/waku_relay\");\nObject.defineProperty(exports, \"WakuRelay\", { enumerable: true, get: function () { return waku_relay_1.WakuRelay; } });\nObject.defineProperty(exports, \"RelayCodec\", { enumerable: true, get: function () { return waku_relay_1.RelayCodec; } });\nvar waku_store_1 = require(\"./lib/waku_store\");\nObject.defineProperty(exports, \"Direction\", { enumerable: true, get: function () { return waku_store_1.Direction; } });\nObject.defineProperty(exports, \"WakuStore\", { enumerable: true, get: function () { return waku_store_1.WakuStore; } });\nObject.defineProperty(exports, \"StoreCodec\", { enumerable: true, get: function () { return waku_store_1.StoreCodec; } });\nexports.proto = __importStar(require(\"./proto\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WakuRelay = exports.DefaultPubsubTopic = exports.RelayCodec = void 0;\nconst debug_1 = __importDefault(require(\"debug\"));\nconst libp2p_gossipsub_1 = __importDefault(require(\"libp2p-gossipsub\"));\nconst utils_1 = require(\"libp2p-gossipsub/src/utils\");\nconst signature_policy_1 = require(\"libp2p-interfaces/src/pubsub/signature-policy\");\nconst peer_id_1 = __importDefault(require(\"peer-id\"));\nconst waku_message_1 = require(\"../waku_message\");\nconst constants = __importStar(require(\"./constants\"));\nconst constants_1 = require(\"./constants\");\nObject.defineProperty(exports, \"DefaultPubsubTopic\", { enumerable: true, get: function () { return constants_1.DefaultPubsubTopic; } });\nObject.defineProperty(exports, \"RelayCodec\", { enumerable: true, get: function () { return constants_1.RelayCodec; } });\nconst get_relay_peers_1 = require(\"./get_relay_peers\");\nconst relay_heartbeat_1 = require(\"./relay_heartbeat\");\nconst dbg = debug_1.default('waku:relay');\n/**\n * Implements the [Waku v2 Relay protocol]{@link https://rfc.vac.dev/spec/11/}.\n * Must be passed as a `pubsub` module to a {Libp2p} instance.\n *\n * @implements {Pubsub}\n * @noInheritDoc\n */\nclass WakuRelay extends libp2p_gossipsub_1.default {\n    constructor(libp2p, options) {\n        super(libp2p, Object.assign(options, {\n            // Ensure that no signature is included nor expected in the messages.\n            globalSignaturePolicy: signature_policy_1.SignaturePolicy.StrictNoSign,\n        }));\n        this.heartbeat = new relay_heartbeat_1.RelayHeartbeat(this);\n        this.observers = {};\n        this.decPrivateKeys = new Set();\n        const multicodecs = [constants.RelayCodec];\n        Object.assign(this, { multicodecs });\n        this.pubsubTopic = (options === null || options === void 0 ? void 0 : options.pubsubTopic) || constants.DefaultPubsubTopic;\n    }\n    /**\n     * Mounts the gossipsub protocol onto the libp2p node\n     * and subscribes to the default topic.\n     *\n     * @override\n     * @returns {void}\n     */\n    start() {\n        super.start();\n        this.subscribe(this.pubsubTopic);\n    }\n    /**\n     * Send Waku message.\n     *\n     * @param {WakuMessage} message\n     * @returns {Promise<void>}\n     */\n    async send(message) {\n        const msg = message.encode();\n        await super.publish(this.pubsubTopic, Buffer.from(msg));\n    }\n    /**\n     * Register a decryption private key to attempt decryption of messages of\n     * the given content topic.\n     */\n    addDecryptionPrivateKey(privateKey) {\n        this.decPrivateKeys.add(privateKey);\n    }\n    /**\n     * Delete a decryption private key to attempt decryption of messages of\n     * the given content topic.\n     */\n    deleteDecryptionPrivateKey(privateKey) {\n        this.decPrivateKeys.delete(privateKey);\n    }\n    /**\n     * Register an observer of new messages received via waku relay\n     *\n     * @param callback called when a new message is received via waku relay\n     * @param contentTopics Content Topics for which the callback with be called,\n     * all of them if undefined, [] or [\"\",..] is passed.\n     * @param decPrivateKeys Private keys used to decrypt incoming Waku Messages.\n     * @returns {void}\n     */\n    addObserver(callback, contentTopics = []) {\n        if (contentTopics.length === 0) {\n            if (!this.observers['']) {\n                this.observers[''] = new Set();\n            }\n            this.observers[''].add(callback);\n        }\n        else {\n            contentTopics.forEach((contentTopic) => {\n                if (!this.observers[contentTopic]) {\n                    this.observers[contentTopic] = new Set();\n                }\n                this.observers[contentTopic].add(callback);\n            });\n        }\n    }\n    /**\n     * Remove an observer of new messages received via waku relay.\n     * Useful to ensure the same observer is not registered several time\n     * (e.g when loading React components)\n     */\n    deleteObserver(callback, contentTopics = []) {\n        if (contentTopics.length === 0) {\n            if (this.observers['']) {\n                this.observers[''].delete(callback);\n            }\n        }\n        else {\n            contentTopics.forEach((contentTopic) => {\n                if (this.observers[contentTopic]) {\n                    this.observers[contentTopic].delete(callback);\n                }\n            });\n        }\n    }\n    /**\n     * Return the relay peers we are connected to and we would publish a message to\n     */\n    getPeers() {\n        return get_relay_peers_1.getRelayPeers(this, this.pubsubTopic, this._options.D, (id) => {\n            // Filter peers we would not publish to\n            return (this.score.score(id) >= this._options.scoreThresholds.publishThreshold);\n        });\n    }\n    /**\n     * Subscribe to a pubsub topic and start emitting Waku messages to observers.\n     *\n     * @override\n     */\n    subscribe(pubsubTopic) {\n        this.on(pubsubTopic, (event) => {\n            dbg(`Message received on ${pubsubTopic}`);\n            waku_message_1.WakuMessage.decode(event.data, Array.from(this.decPrivateKeys))\n                .then((wakuMsg) => {\n                if (!wakuMsg) {\n                    dbg('Failed to decode Waku Message');\n                    return;\n                }\n                if (this.observers['']) {\n                    this.observers[''].forEach((callbackFn) => {\n                        callbackFn(wakuMsg);\n                    });\n                }\n                if (wakuMsg.contentTopic) {\n                    if (this.observers[wakuMsg.contentTopic]) {\n                        this.observers[wakuMsg.contentTopic].forEach((callbackFn) => {\n                            callbackFn(wakuMsg);\n                        });\n                    }\n                }\n            })\n                .catch((e) => {\n                dbg('Failed to decode Waku Message', e);\n            });\n        });\n        super.subscribe(pubsubTopic);\n    }\n    /**\n     * Join pubsub topic.\n     * This is present to override the behavior of Gossipsub and should not\n     * be used by API Consumers\n     *\n     * @internal\n     * @param {string} topic\n     * @returns {void}\n     * @override\n     */\n    join(topic) {\n        var _a;\n        if (!this.started) {\n            throw new Error('WakuRelayPubsub has not started');\n        }\n        const fanoutPeers = this.fanout.get(topic);\n        if (fanoutPeers) {\n            // these peers have a score above the publish threshold, which may be negative\n            // so drop the ones with a negative score\n            fanoutPeers.forEach((id) => {\n                if (this.score.score(id) < 0) {\n                    fanoutPeers.delete(id);\n                }\n            });\n            if (fanoutPeers.size < this._options.D) {\n                // we need more peers; eager, as this would get fixed in the next heartbeat\n                get_relay_peers_1.getRelayPeers(this, topic, this._options.D - fanoutPeers.size, (id) => {\n                    // filter our current peers, direct peers, and peers with negative scores\n                    return (!fanoutPeers.has(id) &&\n                        !this.direct.has(id) &&\n                        this.score.score(id) >= 0);\n                }).forEach((id) => fanoutPeers.add(id));\n            }\n            this.mesh.set(topic, fanoutPeers);\n            this.fanout.delete(topic);\n            this.lastpub.delete(topic);\n        }\n        else {\n            const peers = get_relay_peers_1.getRelayPeers(this, topic, this._options.D, (id) => {\n                // filter direct peers and peers with negative score\n                return !this.direct.has(id) && this.score.score(id) >= 0;\n            });\n            this.mesh.set(topic, peers);\n        }\n        (_a = this.mesh.get(topic)) === null || _a === void 0 ? void 0 : _a.forEach((id) => {\n            this.log('JOIN: Add mesh link to %s in %s', id, topic);\n            this._sendGraft(id, topic);\n        });\n    }\n    /**\n     * Publish messages.\n     * This is present to override the behavior of Gossipsub and should not\n     * be used by API Consumers\n     *\n     * @ignore\n     * @override\n     * @param {InMessage} msg\n     * @returns {void}\n     */\n    async _publish(msg) {\n        if (msg.receivedFrom !== this.peerId.toB58String()) {\n            this.score.deliverMessage(msg);\n            this.gossipTracer.deliverMessage(msg);\n        }\n        const msgID = this.getMsgId(msg);\n        const msgIdStr = utils_1.messageIdToString(msgID);\n        // put in seen cache\n        this.seenCache.put(msgIdStr);\n        this.messageCache.put(msg);\n        const toSend = new Set();\n        msg.topicIDs.forEach((topic) => {\n            const peersInTopic = this.topics.get(topic);\n            if (!peersInTopic) {\n                return;\n            }\n            // direct peers\n            this.direct.forEach((id) => {\n                toSend.add(id);\n            });\n            let meshPeers = this.mesh.get(topic);\n            if (!meshPeers || !meshPeers.size) {\n                // We are not in the mesh for topic, use fanout peers\n                meshPeers = this.fanout.get(topic);\n                if (!meshPeers) {\n                    // If we are not in the fanout, then pick peers in topic above the publishThreshold\n                    const peers = get_relay_peers_1.getRelayPeers(this, topic, this._options.D, (id) => {\n                        return (this.score.score(id) >=\n                            this._options.scoreThresholds.publishThreshold);\n                    });\n                    if (peers.size > 0) {\n                        meshPeers = peers;\n                        this.fanout.set(topic, peers);\n                    }\n                    else {\n                        meshPeers = new Set();\n                    }\n                }\n                // Store the latest publishing time\n                this.lastpub.set(topic, this._now());\n            }\n            meshPeers === null || meshPeers === void 0 ? void 0 : meshPeers.forEach((peer) => {\n                toSend.add(peer);\n            });\n        });\n        // Publish messages to peers\n        const rpc = utils_1.createGossipRpc([libp2p_gossipsub_1.default.utils.normalizeOutRpcMessage(msg)]);\n        toSend.forEach((id) => {\n            if (id === msg.from) {\n                return;\n            }\n            this._sendRpc(id, rpc);\n        });\n    }\n    /**\n     * Emits gossip to peers in a particular topic.\n     *\n     * This is present to override the behavior of Gossipsub and should not\n     * be used by API Consumers\n     *\n     * @ignore\n     * @override\n     * @param {string} topic\n     * @param {Set<string>} exclude peers to exclude\n     * @returns {void}\n     */\n    _emitGossip(topic, exclude) {\n        const messageIDs = this.messageCache.getGossipIDs(topic);\n        if (!messageIDs.length) {\n            return;\n        }\n        // shuffle to emit in random order\n        utils_1.shuffle(messageIDs);\n        // if we are emitting more than GossipsubMaxIHaveLength ids, truncate the list\n        if (messageIDs.length > constants.RelayMaxIHaveLength) {\n            // we do the truncation (with shuffling) per peer below\n            this.log('too many messages for gossip; will truncate IHAVE list (%d messages)', messageIDs.length);\n        }\n        // Send gossip to GossipFactor peers above threshold with a minimum of D_lazy\n        // First we collect the peers above gossipThreshold that are not in the exclude set\n        // and then randomly select from that set\n        // We also exclude direct peers, as there is no reason to emit gossip to them\n        const peersToGossip = [];\n        const topicPeers = this.topics.get(topic);\n        if (!topicPeers) {\n            // no topic peers, no gossip\n            return;\n        }\n        topicPeers.forEach((id) => {\n            const peerStreams = this.peers.get(id);\n            if (!peerStreams) {\n                return;\n            }\n            if (!exclude.has(id) &&\n                !this.direct.has(id) &&\n                peerStreams.protocol == constants.RelayCodec &&\n                this.score.score(id) >= this._options.scoreThresholds.gossipThreshold) {\n                peersToGossip.push(id);\n            }\n        });\n        let target = this._options.Dlazy;\n        const factor = constants.RelayGossipFactor * peersToGossip.length;\n        if (factor > target) {\n            target = factor;\n        }\n        if (target > peersToGossip.length) {\n            target = peersToGossip.length;\n        }\n        else {\n            utils_1.shuffle(peersToGossip);\n        }\n        // Emit the IHAVE gossip to the selected peers up to the target\n        peersToGossip.slice(0, target).forEach((id) => {\n            let peerMessageIDs = messageIDs;\n            if (messageIDs.length > constants.RelayMaxIHaveLength) {\n                // shuffle and slice message IDs per peer so that we emit a different set for each peer\n                // we have enough redundancy in the system that this will significantly increase the message\n                // coverage when we do truncate\n                peerMessageIDs = utils_1.shuffle(peerMessageIDs.slice()).slice(0, constants.RelayMaxIHaveLength);\n            }\n            this._pushGossip(id, {\n                topicID: topic,\n                messageIDs: peerMessageIDs,\n            });\n        });\n    }\n    /**\n     * Make a PRUNE control message for a peer in a topic.\n     * This is present to override the behavior of Gossipsub and should not\n     * be used by API Consumers\n     *\n     * @ignore\n     * @override\n     * @param {string} id\n     * @param {string} topic\n     * @param {boolean} doPX\n     * @returns {RPC.IControlPrune}\n     */\n    _makePrune(id, topic, doPX) {\n        // backoff is measured in seconds\n        // RelayPruneBackoff is measured in milliseconds\n        const backoff = constants.RelayPruneBackoff / 1000;\n        const px = [];\n        if (doPX) {\n            // select peers for Peer eXchange\n            const peers = get_relay_peers_1.getRelayPeers(this, topic, constants.RelayPrunePeers, (xid) => {\n                return xid !== id && this.score.score(xid) >= 0;\n            });\n            peers.forEach((p) => {\n                // see if we have a signed record to send back; if we don't, just send\n                // the peer ID and let the pruned peer find them in the DHT -- we can't trust\n                // unsigned address records through PX anyways\n                // Finding signed records in the DHT is not supported at the time of writing in js-libp2p\n                const peerId = peer_id_1.default.createFromB58String(p);\n                px.push({\n                    peerID: peerId.toBytes(),\n                    signedPeerRecord: this._libp2p.peerStore.addressBook.getRawEnvelope(peerId),\n                });\n            });\n        }\n        return {\n            topicID: topic,\n            peers: px,\n            backoff: backoff,\n        };\n    }\n}\nexports.WakuRelay = WakuRelay;\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WakuMessage = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst long_1 = __importDefault(require(\"long\"));\nconst minimal_1 = __importDefault(require(\"protobufjs/minimal\"));\nexports.protobufPackage = 'waku.v2';\nconst baseWakuMessage = {};\nexports.WakuMessage = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.payload !== undefined) {\n            writer.uint32(10).bytes(message.payload);\n        }\n        if (message.contentTopic !== undefined) {\n            writer.uint32(18).string(message.contentTopic);\n        }\n        if (message.version !== undefined) {\n            writer.uint32(24).uint32(message.version);\n        }\n        if (message.timestamp !== undefined) {\n            writer.uint32(33).double(message.timestamp);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseWakuMessage);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.payload = reader.bytes();\n                    break;\n                case 2:\n                    message.contentTopic = reader.string();\n                    break;\n                case 3:\n                    message.version = reader.uint32();\n                    break;\n                case 4:\n                    message.timestamp = reader.double();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseWakuMessage);\n        if (object.payload !== undefined && object.payload !== null) {\n            message.payload = bytesFromBase64(object.payload);\n        }\n        if (object.contentTopic !== undefined && object.contentTopic !== null) {\n            message.contentTopic = String(object.contentTopic);\n        }\n        else {\n            message.contentTopic = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Number(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = Number(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.payload !== undefined &&\n            (obj.payload =\n                message.payload !== undefined\n                    ? base64FromBytes(message.payload)\n                    : undefined);\n        message.contentTopic !== undefined &&\n            (obj.contentTopic = message.contentTopic);\n        message.version !== undefined && (obj.version = message.version);\n        message.timestamp !== undefined && (obj.timestamp = message.timestamp);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseWakuMessage);\n        if (object.payload !== undefined && object.payload !== null) {\n            message.payload = object.payload;\n        }\n        else {\n            message.payload = undefined;\n        }\n        if (object.contentTopic !== undefined && object.contentTopic !== null) {\n            message.contentTopic = object.contentTopic;\n        }\n        else {\n            message.contentTopic = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = object.version;\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (const byte of arr) {\n        bin.push(String.fromCharCode(byte));\n    }\n    return btoa(bin.join(''));\n}\nif (minimal_1.default.util.Long !== long_1.default) {\n    minimal_1.default.util.Long = long_1.default;\n    minimal_1.default.configure();\n}\n//# sourceMappingURL=message.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getPublicKey = exports.generatePrivateKey = exports.decryptSymmetric = exports.encryptSymmetric = exports.decryptAsymmetric = exports.encryptAsymmetric = exports.clearDecode = exports.clearEncode = void 0;\nconst buffer_1 = require(\"buffer\");\nconst crypto = __importStar(require(\"crypto\"));\nconst ecies = __importStar(require(\"ecies-geth\"));\nconst js_sha3_1 = require(\"js-sha3\");\nconst secp256k1 = __importStar(require(\"secp256k1\"));\nconst utils_1 = require(\"../utils\");\nconst symmetric_1 = require(\"./symmetric\");\nconst FlagsLength = 1;\nconst FlagMask = 3; // 0011\nconst IsSignedMask = 4; // 0100\nconst PaddingTarget = 256;\nconst SignatureLength = 65;\n/**\n * Encode the payload pre-encryption.\n *\n * @internal\n * @param messagePayload: The payload to include in the message\n * @param sigPrivKey: If set, a signature using this private key is added.\n * @returns The encoded payload, ready for encryption using {@link encryptAsymmetric}\n * or {@link encryptSymmetric}.\n */\nfunction clearEncode(messagePayload, sigPrivKey) {\n    let envelope = buffer_1.Buffer.from([0]); // No flags\n    envelope = addPayloadSizeField(envelope, messagePayload);\n    envelope = buffer_1.Buffer.concat([envelope, buffer_1.Buffer.from(messagePayload)]);\n    // Calculate padding:\n    let rawSize = FlagsLength +\n        getSizeOfPayloadSizeField(messagePayload) +\n        messagePayload.length;\n    if (sigPrivKey) {\n        rawSize += SignatureLength;\n    }\n    const remainder = rawSize % PaddingTarget;\n    const paddingSize = PaddingTarget - remainder;\n    const pad = buffer_1.Buffer.from(randomBytes(paddingSize));\n    if (!validateDataIntegrity(pad, paddingSize)) {\n        throw new Error('failed to generate random padding of size ' + paddingSize);\n    }\n    envelope = buffer_1.Buffer.concat([envelope, pad]);\n    let sig;\n    if (sigPrivKey) {\n        envelope[0] |= IsSignedMask;\n        const hash = js_sha3_1.keccak256(envelope);\n        const s = secp256k1.ecdsaSign(utils_1.hexToBuf(hash), sigPrivKey);\n        envelope = buffer_1.Buffer.concat([envelope, s.signature, buffer_1.Buffer.from([s.recid])]);\n        sig = {\n            signature: buffer_1.Buffer.from(s.signature),\n            publicKey: getPublicKey(sigPrivKey),\n        };\n    }\n    return { payload: envelope, sig };\n}\nexports.clearEncode = clearEncode;\n/**\n * Decode a decrypted payload.\n *\n * @internal\n */\nfunction clearDecode(message) {\n    const buf = buffer_1.Buffer.from(message);\n    let start = 1;\n    let sig;\n    const sizeOfPayloadSizeField = buf.readUIntLE(0, 1) & FlagMask;\n    if (sizeOfPayloadSizeField === 0)\n        return;\n    const payloadSize = buf.readUIntLE(start, sizeOfPayloadSizeField);\n    start += sizeOfPayloadSizeField;\n    const payload = buf.slice(start, start + payloadSize);\n    const isSigned = (buf.readUIntLE(0, 1) & IsSignedMask) == IsSignedMask;\n    if (isSigned) {\n        const signature = getSignature(buf);\n        const hash = getHash(buf, isSigned);\n        const publicKey = ecRecoverPubKey(hash, signature);\n        sig = { signature, publicKey };\n    }\n    return { payload, sig };\n}\nexports.clearDecode = clearDecode;\n/**\n * Proceed with Asymmetric encryption of the data as per [26/WAKU-PAYLOAD](https://rfc.vac.dev/spec/26/).\n * The data MUST be flags | payload-length | payload | [signature].\n * The returned result can be set to `WakuMessage.payload`.\n *\n * @internal\n */\nasync function encryptAsymmetric(data, publicKey) {\n    return ecies.encrypt(utils_1.hexToBuf(publicKey), buffer_1.Buffer.from(data));\n}\nexports.encryptAsymmetric = encryptAsymmetric;\n/**\n * Proceed with Asymmetric decryption of the data as per [26/WAKU-PAYLOAD](https://rfc.vac.dev/spec/26/).\n * The return data is expect to be flags | payload-length | payload | [signature].\n *\n * @internal\n */\nasync function decryptAsymmetric(payload, privKey) {\n    return ecies.decrypt(buffer_1.Buffer.from(privKey), buffer_1.Buffer.from(payload));\n}\nexports.decryptAsymmetric = decryptAsymmetric;\n/**\n * Proceed with Symmetric encryption of the data as per [26/WAKU-PAYLOAD](https://rfc.vac.dev/spec/26/).\n *\n * @param data The data to encrypt, expected to be `flags | payload-length | payload | [signature]`.\n * @param key The key to use for encryption.\n * @returns The decrypted data, `cipherText | tag | iv` and can be set to `WakuMessage.payload`.\n *\n * @internal\n */\nasync function encryptSymmetric(data, key) {\n    const iv = symmetric_1.symmetric.generateIv();\n    // Returns `cipher | tag`\n    const cipher = await symmetric_1.symmetric.encrypt(iv, utils_1.hexToBuf(key), buffer_1.Buffer.from(data));\n    return buffer_1.Buffer.concat([cipher, iv]);\n}\nexports.encryptSymmetric = encryptSymmetric;\n/**\n * Proceed with Symmetric decryption of the data as per [26/WAKU-PAYLOAD](https://rfc.vac.dev/spec/26/).\n *\n * @param payload The cipher data, it is expected to be `cipherText | tag | iv`.\n * @param key The key to use for decryption.\n * @returns The decrypted data, expected to be `flags | payload-length | payload | [signature]`.\n *\n * @internal\n */\nasync function decryptSymmetric(payload, key) {\n    const data = buffer_1.Buffer.from(payload);\n    const ivStart = data.length - symmetric_1.IvSize;\n    const cipher = data.slice(0, ivStart);\n    const iv = data.slice(ivStart);\n    return symmetric_1.symmetric.decrypt(iv, utils_1.hexToBuf(key), cipher);\n}\nexports.decryptSymmetric = decryptSymmetric;\n/**\n * Generate a new private key\n */\nfunction generatePrivateKey() {\n    return randomBytes(32);\n}\nexports.generatePrivateKey = generatePrivateKey;\n/**\n * Return the public key for the given private key\n */\nfunction getPublicKey(privateKey) {\n    return secp256k1.publicKeyCreate(privateKey, false);\n}\nexports.getPublicKey = getPublicKey;\n/**\n * Computes the flags & auxiliary-field as per [26/WAKU-PAYLOAD](https://rfc.vac.dev/spec/26/).\n */\nfunction addPayloadSizeField(msg, payload) {\n    const fieldSize = getSizeOfPayloadSizeField(payload);\n    let field = buffer_1.Buffer.alloc(4);\n    field.writeUInt32LE(payload.length, 0);\n    field = field.slice(0, fieldSize);\n    msg = buffer_1.Buffer.concat([msg, field]);\n    msg[0] |= fieldSize;\n    return msg;\n}\n/**\n * Returns the size of the auxiliary-field which in turns contains the payload size\n */\nfunction getSizeOfPayloadSizeField(payload) {\n    let s = 1;\n    for (let i = payload.length; i >= 256; i /= 256) {\n        s++;\n    }\n    return s;\n}\nfunction validateDataIntegrity(value, expectedSize) {\n    if (value.length !== expectedSize) {\n        return false;\n    }\n    if (expectedSize > 3 &&\n        buffer_1.Buffer.from(value).equals(buffer_1.Buffer.alloc(value.length))) {\n        return false;\n    }\n    return true;\n}\nfunction getSignature(message) {\n    return message.slice(message.length - SignatureLength, message.length);\n}\nfunction getHash(message, isSigned) {\n    if (isSigned) {\n        return js_sha3_1.keccak256(message.slice(0, message.length - SignatureLength));\n    }\n    return js_sha3_1.keccak256(message);\n}\nfunction ecRecoverPubKey(messageHash, signature) {\n    const recovery = signature.slice(64).readIntBE(0, 1);\n    return secp256k1.ecdsaRecover(signature.slice(0, 64), recovery, utils_1.hexToBuf(messageHash), false);\n}\nfunction randomBytes(length) {\n    if (typeof window !== 'undefined' && window && window.crypto) {\n        const array = new Uint8Array(length);\n        window.crypto.getRandomValues(array);\n        return array;\n    }\n    else {\n        return crypto.randomBytes(length);\n    }\n}\n//# sourceMappingURL=version_1.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.symmetric = exports.TagSize = exports.IvSize = exports.SymmetricKeySize = void 0;\nexports.SymmetricKeySize = 32;\nexports.IvSize = 12;\nexports.TagSize = 16;\nexports.symmetric = {};\nPromise.resolve().then(() => __importStar(require('./browser'))).then((mod) => {\n    exports.symmetric = mod;\n})\n    .catch((eBrowser) => {\n    Promise.resolve().then(() => __importStar(require('./node'))).then((mod) => {\n        exports.symmetric = mod;\n    })\n        .catch((eNode) => {\n        throw `Could not load any symmetric crypto modules: ${eBrowser}, ${eNode}`;\n    });\n});\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WakuMessage = exports.DefaultContentTopic = void 0;\n// Ensure that this class matches the proto interface while\nconst buffer_1 = require(\"buffer\");\nconst debug_1 = __importDefault(require(\"debug\"));\nconst minimal_1 = require(\"protobufjs/minimal\");\n// Protecting the user from protobuf oddities\nconst proto = __importStar(require(\"../../proto/waku/v2/message\"));\nconst version_1 = __importStar(require(\"./version_1\"));\nexports.DefaultContentTopic = '/waku/2/default-content/proto';\nconst DefaultVersion = 0;\nconst dbg = debug_1.default('waku:message');\nclass WakuMessage {\n    constructor(proto, _signaturePublicKey, _signature) {\n        this.proto = proto;\n        this._signaturePublicKey = _signaturePublicKey;\n        this._signature = _signature;\n    }\n    /**\n     * Create Message with a utf-8 string as payload.\n     */\n    static async fromUtf8String(utf8, opts) {\n        const payload = buffer_1.Buffer.from(utf8, 'utf-8');\n        return WakuMessage.fromBytes(payload, opts);\n    }\n    /**\n     * Create a Waku Message with the given payload.\n     *\n     * By default, the payload is kept clear (version 0).\n     * If `opts.encPublicKey` is passed, the payload is encrypted using\n     * asymmetric encryption (version 1).\n     *\n     * If `opts.sigPrivKey` is passed and version 1 is used, the payload is signed\n     * before encryption.\n     *\n     * @throws if both `opts.encPublicKey` and `opt.symKey` are passed\n     */\n    static async fromBytes(payload, opts) {\n        const { timestamp, contentTopic, encPublicKey, symKey, sigPrivKey } = Object.assign({ timestamp: new Date(), contentTopic: exports.DefaultContentTopic }, opts ? opts : {});\n        let _payload = payload;\n        let version = DefaultVersion;\n        let sig;\n        if (encPublicKey && symKey) {\n            throw 'Pass either `encPublicKey` or `symKey`, not both.';\n        }\n        if (encPublicKey) {\n            const enc = version_1.clearEncode(_payload, sigPrivKey);\n            _payload = await version_1.encryptAsymmetric(enc.payload, encPublicKey);\n            sig = enc.sig;\n            version = 1;\n        }\n        else if (symKey) {\n            const enc = version_1.clearEncode(_payload, sigPrivKey);\n            _payload = await version_1.encryptSymmetric(enc.payload, symKey);\n            sig = enc.sig;\n            version = 1;\n        }\n        return new WakuMessage({\n            payload: _payload,\n            timestamp: timestamp.valueOf() / 1000,\n            version,\n            contentTopic,\n        }, sig === null || sig === void 0 ? void 0 : sig.publicKey, sig === null || sig === void 0 ? void 0 : sig.signature);\n    }\n    /**\n     * Decode a byte array into Waku Message.\n     *\n     * If the payload is encrypted, then `decPrivateKey` is used for decryption.\n     */\n    static async decode(bytes, decPrivateKeys) {\n        const protoBuf = proto.WakuMessage.decode(minimal_1.Reader.create(bytes));\n        return WakuMessage.decodeProto(protoBuf, decPrivateKeys);\n    }\n    /**\n     * Decode a Waku Message Protobuf Object into Waku Message.\n     *\n     * If the payload is encrypted, then `decPrivateKey` is used for decryption.\n     */\n    static async decodeProto(protoBuf, decPrivateKeys) {\n        var _a, _b;\n        if (protoBuf.payload === undefined) {\n            dbg('Payload is undefined');\n            return;\n        }\n        const payload = protoBuf.payload;\n        let signaturePublicKey;\n        let signature;\n        if (protoBuf.version === 1 && protoBuf.payload) {\n            if (decPrivateKeys === undefined) {\n                dbg('Payload is encrypted but no private keys have been provided.');\n                return;\n            }\n            // Returns a bunch of `undefined` and hopefully one decrypted result\n            const allResults = await Promise.all(decPrivateKeys.map(async (privateKey) => {\n                try {\n                    return await version_1.decryptSymmetric(payload, privateKey);\n                }\n                catch (e) {\n                    dbg('Failed to decrypt message using symmetric encryption', e);\n                    try {\n                        return await version_1.decryptAsymmetric(payload, privateKey);\n                    }\n                    catch (e) {\n                        dbg('Failed to decrypt message using asymmetric encryption', e);\n                        return;\n                    }\n                }\n            }));\n            const isDefined = (dec) => {\n                return !!dec;\n            };\n            const decodedResults = allResults.filter(isDefined);\n            if (decodedResults.length === 0) {\n                dbg('Failed to decrypt payload.');\n                return;\n            }\n            const dec = decodedResults[0];\n            const res = await version_1.clearDecode(dec);\n            if (!res) {\n                dbg('Failed to decode payload.');\n                return;\n            }\n            Object.assign(protoBuf, { payload: res.payload });\n            signaturePublicKey = (_a = res.sig) === null || _a === void 0 ? void 0 : _a.publicKey;\n            signature = (_b = res.sig) === null || _b === void 0 ? void 0 : _b.signature;\n        }\n        return new WakuMessage(protoBuf, signaturePublicKey, signature);\n    }\n    encode() {\n        return proto.WakuMessage.encode(this.proto).finish();\n    }\n    get payloadAsUtf8() {\n        if (!this.proto.payload) {\n            return '';\n        }\n        return Array.from(this.proto.payload)\n            .map((char) => {\n            return String.fromCharCode(char);\n        })\n            .join('');\n    }\n    get payload() {\n        return this.proto.payload;\n    }\n    get contentTopic() {\n        return this.proto.contentTopic;\n    }\n    get version() {\n        return this.proto.version;\n    }\n    get timestamp() {\n        if (this.proto.timestamp) {\n            return new Date(this.proto.timestamp * 1000);\n        }\n        return;\n    }\n    /**\n     * The public key used to sign the message.\n     *\n     * MAY be present if the message is version 1.\n     */\n    get signaturePublicKey() {\n        return this._signaturePublicKey;\n    }\n    /**\n     * The signature of the message.\n     *\n     * MAY be present if the message is version 1.\n     */\n    get signature() {\n        return this._signature;\n    }\n}\nexports.WakuMessage = WakuMessage;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RelayMaxIHaveLength = exports.RelayOpportunisticGraftPeers = exports.RelayOpportunisticGraftTicks = exports.RelayFanoutTTL = exports.RelayPruneBackoff = exports.RelayPrunePeers = exports.RelayHeartbeatInterval = exports.RelayHeartbeatInitialDelay = exports.RelayGossipFactor = exports.DefaultPubsubTopic = exports.RelayCodec = exports.minute = exports.second = void 0;\nexports.second = 1000;\nexports.minute = 60 * exports.second;\n/**\n * RelayCodec is the libp2p identifier for the waku relay protocol\n */\nexports.RelayCodec = '/vac/waku/relay/2.0.0-beta2';\n/**\n * RelayDefaultTopic is the default gossipsub topic to use for waku relay\n */\nexports.DefaultPubsubTopic = '/waku/2/default-waku/proto';\n/**\n * RelayGossipFactor affects how many peers we will emit gossip to at each heartbeat.\n * We will send gossip to RelayGossipFactor * (total number of non-mesh peers), or\n * RelayDlazy, whichever is greater.\n */\nexports.RelayGossipFactor = 0.25;\n/**\n * GossipsubHeartbeatInitialDelay is the short delay before the heartbeat timer begins\n * after the router is initialized.\n */\nexports.RelayHeartbeatInitialDelay = 100;\n/**\n * RelayHeartbeatInterval controls the time between heartbeats.\n */\nexports.RelayHeartbeatInterval = exports.second;\n/**\n * RelayPrunePeers controls the number of peers to include in prune Peer eXchange.\n * When we prune a peer that's eligible for PX (has a good score, etc), we will try to\n * send them signed peer records for up to RelayPrunePeers other peers that we\n * know of.\n */\nexports.RelayPrunePeers = 16;\n/**\n * RelayPruneBackoff controls the backoff time for pruned peers. This is how long\n * a peer must wait before attempting to graft into our mesh again after being pruned.\n * When pruning a peer, we send them our value of RelayPruneBackoff so they know\n * the minimum time to wait. Peers running older versions may not send a backoff time,\n * so if we receive a prune message without one, we will wait at least RelayPruneBackoff\n * before attempting to re-graft.\n */\nexports.RelayPruneBackoff = exports.minute;\n/**\n * RelayFanoutTTL controls how long we keep track of the fanout state. If it's been\n * RelayFanoutTTL since we've published to a topic that we're not subscribed to,\n * we'll delete the fanout map for that topic.\n */\nexports.RelayFanoutTTL = exports.minute;\n/**\n * RelayOpportunisticGraftTicks is the number of heartbeat ticks for attempting to improve the mesh\n * with opportunistic grafting. Every RelayOpportunisticGraftTicks we will attempt to select some\n * high-scoring mesh peers to replace lower-scoring ones, if the median score of our mesh peers falls\n * below a threshold\n */\nexports.RelayOpportunisticGraftTicks = 60;\n/**\n * RelayOpportunisticGraftPeers is the number of peers to opportunistically graft.\n */\nexports.RelayOpportunisticGraftPeers = 2;\n/**\n * RelayMaxIHaveLength is the maximum number of messages to include in an IHAVE message.\n * Also controls the maximum number of IHAVE ids we will accept and request with IWANT from a\n * peer within a heartbeat, to protect from IHAVE floods. You should adjust this value from the\n * default if your system is pushing more than 5000 messages in GossipsubHistoryGossip heartbeats;\n * with the defaults this is 1666 messages/s.\n */\nexports.RelayMaxIHaveLength = 5000;\n//# sourceMappingURL=constants.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.equalByteArrays = exports.bufToHex = exports.hexToBuf = void 0;\nfunction hexToBuf(hex) {\n    if (typeof hex === 'string') {\n        return Buffer.from(hex.replace(/^0x/i, ''), 'hex');\n    }\n    else {\n        return Buffer.from(hex);\n    }\n}\nexports.hexToBuf = hexToBuf;\nfunction bufToHex(buf) {\n    const _buf = Buffer.from(buf);\n    return _buf.toString('hex');\n}\nexports.bufToHex = bufToHex;\nfunction equalByteArrays(a, b) {\n    let aBuf;\n    let bBuf;\n    if (typeof a === 'string') {\n        aBuf = hexToBuf(a);\n    }\n    else {\n        aBuf = Buffer.from(a);\n    }\n    if (typeof b === 'string') {\n        bBuf = hexToBuf(b);\n    }\n    else {\n        bBuf = Buffer.from(b);\n    }\n    return aBuf.compare(bBuf) === 0;\n}\nexports.equalByteArrays = equalByteArrays;\n//# sourceMappingURL=utils.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WakuLightPush = exports.PushResponse = exports.LightPushCodec = void 0;\nconst it_concat_1 = __importDefault(require(\"it-concat\"));\nconst it_length_prefixed_1 = __importDefault(require(\"it-length-prefixed\"));\nconst it_pipe_1 = __importDefault(require(\"it-pipe\"));\nconst light_push_1 = require(\"../../proto/waku/v2/light_push\");\nObject.defineProperty(exports, \"PushResponse\", { enumerable: true, get: function () { return light_push_1.PushResponse; } });\nconst select_peer_1 = require(\"../select_peer\");\nconst waku_relay_1 = require(\"../waku_relay\");\nconst push_rpc_1 = require(\"./push_rpc\");\nexports.LightPushCodec = '/vac/waku/lightpush/2.0.0-beta1';\n/**\n * Implements the [Waku v2 Light Push protocol](https://rfc.vac.dev/spec/19/).\n */\nclass WakuLightPush {\n    constructor(libp2p, options) {\n        this.libp2p = libp2p;\n        if (options === null || options === void 0 ? void 0 : options.pubsubTopic) {\n            this.pubsubTopic = options.pubsubTopic;\n        }\n        else {\n            this.pubsubTopic = waku_relay_1.DefaultPubsubTopic;\n        }\n    }\n    async push(message, opts) {\n        let peer;\n        if (opts === null || opts === void 0 ? void 0 : opts.peerId) {\n            peer = this.libp2p.peerStore.get(opts.peerId);\n            if (!peer)\n                throw 'Peer is unknown';\n        }\n        else {\n            peer = this.randomPeer;\n        }\n        if (!peer)\n            throw 'No peer available';\n        if (!peer.protocols.includes(exports.LightPushCodec))\n            throw 'Peer does not register waku light push protocol';\n        const connection = this.libp2p.connectionManager.get(peer.id);\n        if (!connection)\n            throw 'Failed to get a connection to the peer';\n        const { stream } = await connection.newStream(exports.LightPushCodec);\n        try {\n            const pubsubTopic = (opts === null || opts === void 0 ? void 0 : opts.pubsubTopic)\n                ? opts.pubsubTopic\n                : this.pubsubTopic;\n            const query = push_rpc_1.PushRPC.createRequest(message, pubsubTopic);\n            const res = await it_pipe_1.default([query.encode()], it_length_prefixed_1.default.encode(), stream, it_length_prefixed_1.default.decode(), it_concat_1.default);\n            try {\n                const response = push_rpc_1.PushRPC.decode(res.slice()).response;\n                if (!response) {\n                    console.log('No response in PushRPC');\n                    return null;\n                }\n                return response;\n            }\n            catch (err) {\n                console.log('Failed to decode push reply', err);\n            }\n        }\n        catch (err) {\n            console.log('Failed to send waku light push request', err);\n        }\n        return null;\n    }\n    /**\n     * Returns known peers from the address book (`libp2p.peerStore`) that support\n     * light push protocol. Waku may or  may not be currently connected to these peers.\n     */\n    get peers() {\n        return select_peer_1.getPeersForProtocol(this.libp2p, exports.LightPushCodec);\n    }\n    /**\n     * Returns a random peer that supports light push protocol from the address\n     * book (`libp2p.peerStore`). Waku may or  may not be currently connected to\n     * this peer.\n     */\n    get randomPeer() {\n        return select_peer_1.selectRandomPeer(this.peers);\n    }\n}\nexports.WakuLightPush = WakuLightPush;\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PushRPC = exports.PushResponse = exports.PushRequest = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst long_1 = __importDefault(require(\"long\"));\nconst minimal_1 = __importDefault(require(\"protobufjs/minimal\"));\nconst message_1 = require(\"../../waku/v2/message\");\nexports.protobufPackage = 'waku.v2';\nconst basePushRequest = { pubsubTopic: '' };\nexports.PushRequest = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.pubsubTopic !== '') {\n            writer.uint32(10).string(message.pubsubTopic);\n        }\n        if (message.message !== undefined) {\n            message_1.WakuMessage.encode(message.message, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, basePushRequest);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubsubTopic = reader.string();\n                    break;\n                case 2:\n                    message.message = message_1.WakuMessage.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, basePushRequest);\n        if (object.pubsubTopic !== undefined && object.pubsubTopic !== null) {\n            message.pubsubTopic = String(object.pubsubTopic);\n        }\n        else {\n            message.pubsubTopic = '';\n        }\n        if (object.message !== undefined && object.message !== null) {\n            message.message = message_1.WakuMessage.fromJSON(object.message);\n        }\n        else {\n            message.message = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pubsubTopic !== undefined &&\n            (obj.pubsubTopic = message.pubsubTopic);\n        message.message !== undefined &&\n            (obj.message = message.message\n                ? message_1.WakuMessage.toJSON(message.message)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, basePushRequest);\n        if (object.pubsubTopic !== undefined && object.pubsubTopic !== null) {\n            message.pubsubTopic = object.pubsubTopic;\n        }\n        else {\n            message.pubsubTopic = '';\n        }\n        if (object.message !== undefined && object.message !== null) {\n            message.message = message_1.WakuMessage.fromPartial(object.message);\n        }\n        else {\n            message.message = undefined;\n        }\n        return message;\n    },\n};\nconst basePushResponse = { isSuccess: false, info: '' };\nexports.PushResponse = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.isSuccess === true) {\n            writer.uint32(8).bool(message.isSuccess);\n        }\n        if (message.info !== '') {\n            writer.uint32(18).string(message.info);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, basePushResponse);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.isSuccess = reader.bool();\n                    break;\n                case 2:\n                    message.info = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, basePushResponse);\n        if (object.isSuccess !== undefined && object.isSuccess !== null) {\n            message.isSuccess = Boolean(object.isSuccess);\n        }\n        else {\n            message.isSuccess = false;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.isSuccess !== undefined && (obj.isSuccess = message.isSuccess);\n        message.info !== undefined && (obj.info = message.info);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, basePushResponse);\n        if (object.isSuccess !== undefined && object.isSuccess !== null) {\n            message.isSuccess = object.isSuccess;\n        }\n        else {\n            message.isSuccess = false;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = '';\n        }\n        return message;\n    },\n};\nconst basePushRPC = { requestId: '' };\nexports.PushRPC = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.requestId !== '') {\n            writer.uint32(10).string(message.requestId);\n        }\n        if (message.request !== undefined) {\n            exports.PushRequest.encode(message.request, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.response !== undefined) {\n            exports.PushResponse.encode(message.response, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, basePushRPC);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.requestId = reader.string();\n                    break;\n                case 2:\n                    message.request = exports.PushRequest.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.response = exports.PushResponse.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, basePushRPC);\n        if (object.requestId !== undefined && object.requestId !== null) {\n            message.requestId = String(object.requestId);\n        }\n        else {\n            message.requestId = '';\n        }\n        if (object.request !== undefined && object.request !== null) {\n            message.request = exports.PushRequest.fromJSON(object.request);\n        }\n        else {\n            message.request = undefined;\n        }\n        if (object.response !== undefined && object.response !== null) {\n            message.response = exports.PushResponse.fromJSON(object.response);\n        }\n        else {\n            message.response = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.requestId !== undefined && (obj.requestId = message.requestId);\n        message.request !== undefined &&\n            (obj.request = message.request\n                ? exports.PushRequest.toJSON(message.request)\n                : undefined);\n        message.response !== undefined &&\n            (obj.response = message.response\n                ? exports.PushResponse.toJSON(message.response)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, basePushRPC);\n        if (object.requestId !== undefined && object.requestId !== null) {\n            message.requestId = object.requestId;\n        }\n        else {\n            message.requestId = '';\n        }\n        if (object.request !== undefined && object.request !== null) {\n            message.request = exports.PushRequest.fromPartial(object.request);\n        }\n        else {\n            message.request = undefined;\n        }\n        if (object.response !== undefined && object.response !== null) {\n            message.response = exports.PushResponse.fromPartial(object.response);\n        }\n        else {\n            message.response = undefined;\n        }\n        return message;\n    },\n};\nif (minimal_1.default.util.Long !== long_1.default) {\n    minimal_1.default.util.Long = long_1.default;\n    minimal_1.default.configure();\n}\n//# sourceMappingURL=light_push.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getPeersForProtocol = exports.selectRandomPeer = void 0;\n/**\n * Returns a pseudo-random peer that supports the given protocol.\n * Useful for protocols such as store and light push\n */\nfunction selectRandomPeer(peers) {\n    if (peers.length === 0)\n        return;\n    const index = Math.round(Math.random() * (peers.length - 1));\n    return peers[index];\n}\nexports.selectRandomPeer = selectRandomPeer;\n/**\n * Returns the list of peers that supports the given protocol.\n */\nfunction getPeersForProtocol(libp2p, protocol) {\n    return Array.from(libp2p.peerStore.peers.values()).filter((peer) => peer.protocols.includes(protocol));\n}\nexports.getPeersForProtocol = getPeersForProtocol;\n//# sourceMappingURL=select_peer.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRelayPeers = void 0;\nconst utils_1 = require(\"libp2p-gossipsub/src/utils\");\nconst index_1 = require(\"./index\");\n/**\n * Given a topic, returns up to count peers subscribed to that topic\n * that pass an optional filter function\n *\n * @param {Gossipsub} router\n * @param {String} topic\n * @param {Number} count\n * @param {Function} [filter] a function to filter acceptable peers\n * @returns {Set<string>}\n *\n */\nfunction getRelayPeers(router, topic, count, filter = () => true) {\n    const peersInTopic = router.topics.get(topic);\n    if (!peersInTopic) {\n        return new Set();\n    }\n    // Adds all peers using our protocol\n    // that also pass the filter function\n    let peers = [];\n    peersInTopic.forEach((id) => {\n        const peerStreams = router.peers.get(id);\n        if (!peerStreams) {\n            return;\n        }\n        if (peerStreams.protocol == index_1.RelayCodec && filter(id)) {\n            peers.push(id);\n        }\n    });\n    // Pseudo-randomly shuffles peers\n    peers = utils_1.shuffle(peers);\n    if (count > 0 && peers.length > count) {\n        peers = peers.slice(0, count);\n    }\n    return new Set(peers);\n}\nexports.getRelayPeers = getRelayPeers;\n//# sourceMappingURL=get_relay_peers.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WakuStore = exports.Direction = exports.StoreCodec = void 0;\nconst debug_1 = __importDefault(require(\"debug\"));\nconst it_concat_1 = __importDefault(require(\"it-concat\"));\nconst it_length_prefixed_1 = __importDefault(require(\"it-length-prefixed\"));\nconst it_pipe_1 = __importDefault(require(\"it-pipe\"));\nconst select_peer_1 = require(\"../select_peer\");\nconst waku_message_1 = require(\"../waku_message\");\nconst waku_relay_1 = require(\"../waku_relay\");\nconst history_rpc_1 = require(\"./history_rpc\");\nObject.defineProperty(exports, \"Direction\", { enumerable: true, get: function () { return history_rpc_1.Direction; } });\nconst dbg = debug_1.default('waku:store');\nexports.StoreCodec = '/vac/waku/store/2.0.0-beta3';\n/**\n * Implements the [Waku v2 Store protocol](https://rfc.vac.dev/spec/13/).\n */\nclass WakuStore {\n    constructor(libp2p, options) {\n        this.libp2p = libp2p;\n        if (options === null || options === void 0 ? void 0 : options.pubsubTopic) {\n            this.pubsubTopic = options.pubsubTopic;\n        }\n        else {\n            this.pubsubTopic = waku_relay_1.DefaultPubsubTopic;\n        }\n    }\n    /**\n     * Query given peer using Waku Store.\n     *\n     * @param options\n     * @param options.peerId The peer to query.Options\n     * @param options.contentTopics The content topics to pass to the query, leave empty to\n     * retrieve all messages.\n     * @param options.pubsubTopic The pubsub topic to pass to the query. Defaults\n     * to the value set at creation. See [Waku v2 Topic Usage Recommendations](https://rfc.vac.dev/spec/23/).\n     * @param options.callback Callback called on page of stored messages as they are retrieved\n     * @throws If not able to reach the peer to query.\n     */\n    async queryHistory(options) {\n        var _a, _b, _c, _d;\n        const opts = Object.assign({\n            pubsubTopic: this.pubsubTopic,\n            direction: history_rpc_1.Direction.BACKWARD,\n            pageSize: 10,\n        }, options);\n        dbg('Querying history with the following options', options);\n        let peer;\n        if (opts.peerId) {\n            peer = this.libp2p.peerStore.get(opts.peerId);\n            if (!peer)\n                throw 'Peer is unknown';\n        }\n        else {\n            peer = this.randomPeer;\n        }\n        if (!peer)\n            throw 'No peer available';\n        if (!peer.protocols.includes(exports.StoreCodec))\n            throw 'Peer does not register waku store protocol';\n        const connection = this.libp2p.connectionManager.get(peer.id);\n        if (!connection)\n            throw 'Failed to get a connection to the peer';\n        const messages = [];\n        let cursor = undefined;\n        while (true) {\n            try {\n                const { stream } = await connection.newStream(exports.StoreCodec);\n                try {\n                    const queryOpts = Object.assign(opts, { cursor });\n                    const historyRpcQuery = history_rpc_1.HistoryRPC.createQuery(queryOpts);\n                    const res = await it_pipe_1.default([historyRpcQuery.encode()], it_length_prefixed_1.default.encode(), stream, it_length_prefixed_1.default.decode(), it_concat_1.default);\n                    try {\n                        const reply = history_rpc_1.HistoryRPC.decode(res.slice());\n                        const response = reply.response;\n                        if (!response) {\n                            console.log('No response in HistoryRPC');\n                            return null;\n                        }\n                        if (!response.messages || !response.messages.length) {\n                            // No messages left (or stored)\n                            console.log('No messages present in HistoryRPC response');\n                            return messages;\n                        }\n                        dbg(`${response.messages.length} messages retrieved for pubsub topic ${opts.pubsubTopic}`);\n                        const pageMessages = [];\n                        await Promise.all(response.messages.map(async (protoMsg) => {\n                            const msg = await waku_message_1.WakuMessage.decodeProto(protoMsg, opts.decryptionPrivateKeys);\n                            if (msg) {\n                                messages.push(msg);\n                                pageMessages.push(msg);\n                            }\n                        }));\n                        if (opts.callback) {\n                            // TODO: Test the callback feature\n                            // TODO: Change callback to take individual messages\n                            opts.callback(pageMessages);\n                        }\n                        const responsePageSize = (_a = response.pagingInfo) === null || _a === void 0 ? void 0 : _a.pageSize;\n                        const queryPageSize = (_c = (_b = historyRpcQuery.query) === null || _b === void 0 ? void 0 : _b.pagingInfo) === null || _c === void 0 ? void 0 : _c.pageSize;\n                        if (responsePageSize &&\n                            queryPageSize &&\n                            responsePageSize < queryPageSize) {\n                            // Response page size smaller than query, meaning this is the last page\n                            return messages;\n                        }\n                        cursor = (_d = response.pagingInfo) === null || _d === void 0 ? void 0 : _d.cursor;\n                        if (cursor === undefined) {\n                            // If the server does not return cursor then there is an issue,\n                            // Need to abort or we end up in an infinite loop\n                            console.log('No cursor returned by peer.');\n                            return messages;\n                        }\n                    }\n                    catch (err) {\n                        console.log('Failed to decode store reply', err);\n                    }\n                }\n                catch (err) {\n                    console.log('Failed to send waku store query', err);\n                }\n            }\n            catch (err) {\n                console.log('Failed to negotiate waku store protocol stream with peer', err);\n            }\n        }\n    }\n    /**\n     * Returns known peers from the address book (`libp2p.peerStore`) that support\n     * store protocol. Waku may or  may not be currently connected to these peers.\n     */\n    get peers() {\n        return select_peer_1.getPeersForProtocol(this.libp2p, exports.StoreCodec);\n    }\n    /**\n     * Returns a random peer that supports store protocol from the address\n     * book (`libp2p.peerStore`). Waku may or  may not be currently connected to\n     * this peer.\n     */\n    get randomPeer() {\n        return select_peer_1.selectRandomPeer(this.peers);\n    }\n}\nexports.WakuStore = WakuStore;\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HistoryRPC = exports.HistoryResponse = exports.HistoryQuery = exports.ContentFilter = exports.PagingInfo = exports.Index = exports.pagingInfo_DirectionToJSON = exports.pagingInfo_DirectionFromJSON = exports.PagingInfo_Direction = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst long_1 = __importDefault(require(\"long\"));\nconst minimal_1 = __importDefault(require(\"protobufjs/minimal\"));\nconst message_1 = require(\"../../waku/v2/message\");\nexports.protobufPackage = 'waku.v2';\nvar PagingInfo_Direction;\n(function (PagingInfo_Direction) {\n    PagingInfo_Direction[PagingInfo_Direction[\"DIRECTION_BACKWARD_UNSPECIFIED\"] = 0] = \"DIRECTION_BACKWARD_UNSPECIFIED\";\n    PagingInfo_Direction[PagingInfo_Direction[\"DIRECTION_FORWARD\"] = 1] = \"DIRECTION_FORWARD\";\n    PagingInfo_Direction[PagingInfo_Direction[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(PagingInfo_Direction = exports.PagingInfo_Direction || (exports.PagingInfo_Direction = {}));\nfunction pagingInfo_DirectionFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'DIRECTION_BACKWARD_UNSPECIFIED':\n            return PagingInfo_Direction.DIRECTION_BACKWARD_UNSPECIFIED;\n        case 1:\n        case 'DIRECTION_FORWARD':\n            return PagingInfo_Direction.DIRECTION_FORWARD;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return PagingInfo_Direction.UNRECOGNIZED;\n    }\n}\nexports.pagingInfo_DirectionFromJSON = pagingInfo_DirectionFromJSON;\nfunction pagingInfo_DirectionToJSON(object) {\n    switch (object) {\n        case PagingInfo_Direction.DIRECTION_BACKWARD_UNSPECIFIED:\n            return 'DIRECTION_BACKWARD_UNSPECIFIED';\n        case PagingInfo_Direction.DIRECTION_FORWARD:\n            return 'DIRECTION_FORWARD';\n        default:\n            return 'UNKNOWN';\n    }\n}\nexports.pagingInfo_DirectionToJSON = pagingInfo_DirectionToJSON;\nconst baseIndex = { receivedTime: 0 };\nexports.Index = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.digest.length !== 0) {\n            writer.uint32(10).bytes(message.digest);\n        }\n        if (message.receivedTime !== 0) {\n            writer.uint32(17).double(message.receivedTime);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseIndex);\n        message.digest = new Uint8Array();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.digest = reader.bytes();\n                    break;\n                case 2:\n                    message.receivedTime = reader.double();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseIndex);\n        message.digest = new Uint8Array();\n        if (object.digest !== undefined && object.digest !== null) {\n            message.digest = bytesFromBase64(object.digest);\n        }\n        if (object.receivedTime !== undefined && object.receivedTime !== null) {\n            message.receivedTime = Number(object.receivedTime);\n        }\n        else {\n            message.receivedTime = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.digest !== undefined &&\n            (obj.digest = base64FromBytes(message.digest !== undefined ? message.digest : new Uint8Array()));\n        message.receivedTime !== undefined &&\n            (obj.receivedTime = message.receivedTime);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseIndex);\n        if (object.digest !== undefined && object.digest !== null) {\n            message.digest = object.digest;\n        }\n        else {\n            message.digest = new Uint8Array();\n        }\n        if (object.receivedTime !== undefined && object.receivedTime !== null) {\n            message.receivedTime = object.receivedTime;\n        }\n        else {\n            message.receivedTime = 0;\n        }\n        return message;\n    },\n};\nconst basePagingInfo = { pageSize: 0, direction: 0 };\nexports.PagingInfo = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.pageSize !== 0) {\n            writer.uint32(8).uint64(message.pageSize);\n        }\n        if (message.cursor !== undefined) {\n            exports.Index.encode(message.cursor, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.direction !== 0) {\n            writer.uint32(24).int32(message.direction);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, basePagingInfo);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pageSize = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.cursor = exports.Index.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.direction = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, basePagingInfo);\n        if (object.pageSize !== undefined && object.pageSize !== null) {\n            message.pageSize = Number(object.pageSize);\n        }\n        else {\n            message.pageSize = 0;\n        }\n        if (object.cursor !== undefined && object.cursor !== null) {\n            message.cursor = exports.Index.fromJSON(object.cursor);\n        }\n        else {\n            message.cursor = undefined;\n        }\n        if (object.direction !== undefined && object.direction !== null) {\n            message.direction = pagingInfo_DirectionFromJSON(object.direction);\n        }\n        else {\n            message.direction = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pageSize !== undefined && (obj.pageSize = message.pageSize);\n        message.cursor !== undefined &&\n            (obj.cursor = message.cursor ? exports.Index.toJSON(message.cursor) : undefined);\n        message.direction !== undefined &&\n            (obj.direction = pagingInfo_DirectionToJSON(message.direction));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, basePagingInfo);\n        if (object.pageSize !== undefined && object.pageSize !== null) {\n            message.pageSize = object.pageSize;\n        }\n        else {\n            message.pageSize = 0;\n        }\n        if (object.cursor !== undefined && object.cursor !== null) {\n            message.cursor = exports.Index.fromPartial(object.cursor);\n        }\n        else {\n            message.cursor = undefined;\n        }\n        if (object.direction !== undefined && object.direction !== null) {\n            message.direction = object.direction;\n        }\n        else {\n            message.direction = 0;\n        }\n        return message;\n    },\n};\nconst baseContentFilter = { contentTopic: '' };\nexports.ContentFilter = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.contentTopic !== '') {\n            writer.uint32(10).string(message.contentTopic);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseContentFilter);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.contentTopic = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseContentFilter);\n        if (object.contentTopic !== undefined && object.contentTopic !== null) {\n            message.contentTopic = String(object.contentTopic);\n        }\n        else {\n            message.contentTopic = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.contentTopic !== undefined &&\n            (obj.contentTopic = message.contentTopic);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseContentFilter);\n        if (object.contentTopic !== undefined && object.contentTopic !== null) {\n            message.contentTopic = object.contentTopic;\n        }\n        else {\n            message.contentTopic = '';\n        }\n        return message;\n    },\n};\nconst baseHistoryQuery = {};\nexports.HistoryQuery = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.pubsubTopic !== undefined) {\n            writer.uint32(18).string(message.pubsubTopic);\n        }\n        for (const v of message.contentFilters) {\n            exports.ContentFilter.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.pagingInfo !== undefined) {\n            exports.PagingInfo.encode(message.pagingInfo, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.startTime !== undefined) {\n            writer.uint32(41).double(message.startTime);\n        }\n        if (message.endTime !== undefined) {\n            writer.uint32(49).double(message.endTime);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseHistoryQuery);\n        message.contentFilters = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 2:\n                    message.pubsubTopic = reader.string();\n                    break;\n                case 3:\n                    message.contentFilters.push(exports.ContentFilter.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.pagingInfo = exports.PagingInfo.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.startTime = reader.double();\n                    break;\n                case 6:\n                    message.endTime = reader.double();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseHistoryQuery);\n        message.contentFilters = [];\n        if (object.pubsubTopic !== undefined && object.pubsubTopic !== null) {\n            message.pubsubTopic = String(object.pubsubTopic);\n        }\n        else {\n            message.pubsubTopic = undefined;\n        }\n        if (object.contentFilters !== undefined && object.contentFilters !== null) {\n            for (const e of object.contentFilters) {\n                message.contentFilters.push(exports.ContentFilter.fromJSON(e));\n            }\n        }\n        if (object.pagingInfo !== undefined && object.pagingInfo !== null) {\n            message.pagingInfo = exports.PagingInfo.fromJSON(object.pagingInfo);\n        }\n        else {\n            message.pagingInfo = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = Number(object.startTime);\n        }\n        else {\n            message.startTime = undefined;\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = Number(object.endTime);\n        }\n        else {\n            message.endTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pubsubTopic !== undefined &&\n            (obj.pubsubTopic = message.pubsubTopic);\n        if (message.contentFilters) {\n            obj.contentFilters = message.contentFilters.map((e) => e ? exports.ContentFilter.toJSON(e) : undefined);\n        }\n        else {\n            obj.contentFilters = [];\n        }\n        message.pagingInfo !== undefined &&\n            (obj.pagingInfo = message.pagingInfo\n                ? exports.PagingInfo.toJSON(message.pagingInfo)\n                : undefined);\n        message.startTime !== undefined && (obj.startTime = message.startTime);\n        message.endTime !== undefined && (obj.endTime = message.endTime);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseHistoryQuery);\n        message.contentFilters = [];\n        if (object.pubsubTopic !== undefined && object.pubsubTopic !== null) {\n            message.pubsubTopic = object.pubsubTopic;\n        }\n        else {\n            message.pubsubTopic = undefined;\n        }\n        if (object.contentFilters !== undefined && object.contentFilters !== null) {\n            for (const e of object.contentFilters) {\n                message.contentFilters.push(exports.ContentFilter.fromPartial(e));\n            }\n        }\n        if (object.pagingInfo !== undefined && object.pagingInfo !== null) {\n            message.pagingInfo = exports.PagingInfo.fromPartial(object.pagingInfo);\n        }\n        else {\n            message.pagingInfo = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = object.startTime;\n        }\n        else {\n            message.startTime = undefined;\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = object.endTime;\n        }\n        else {\n            message.endTime = undefined;\n        }\n        return message;\n    },\n};\nconst baseHistoryResponse = {};\nexports.HistoryResponse = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        for (const v of message.messages) {\n            message_1.WakuMessage.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.pagingInfo !== undefined) {\n            exports.PagingInfo.encode(message.pagingInfo, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseHistoryResponse);\n        message.messages = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.messages.push(message_1.WakuMessage.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.pagingInfo = exports.PagingInfo.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseHistoryResponse);\n        message.messages = [];\n        if (object.messages !== undefined && object.messages !== null) {\n            for (const e of object.messages) {\n                message.messages.push(message_1.WakuMessage.fromJSON(e));\n            }\n        }\n        if (object.pagingInfo !== undefined && object.pagingInfo !== null) {\n            message.pagingInfo = exports.PagingInfo.fromJSON(object.pagingInfo);\n        }\n        else {\n            message.pagingInfo = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.messages) {\n            obj.messages = message.messages.map((e) => e ? message_1.WakuMessage.toJSON(e) : undefined);\n        }\n        else {\n            obj.messages = [];\n        }\n        message.pagingInfo !== undefined &&\n            (obj.pagingInfo = message.pagingInfo\n                ? exports.PagingInfo.toJSON(message.pagingInfo)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseHistoryResponse);\n        message.messages = [];\n        if (object.messages !== undefined && object.messages !== null) {\n            for (const e of object.messages) {\n                message.messages.push(message_1.WakuMessage.fromPartial(e));\n            }\n        }\n        if (object.pagingInfo !== undefined && object.pagingInfo !== null) {\n            message.pagingInfo = exports.PagingInfo.fromPartial(object.pagingInfo);\n        }\n        else {\n            message.pagingInfo = undefined;\n        }\n        return message;\n    },\n};\nconst baseHistoryRPC = { requestId: '' };\nexports.HistoryRPC = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.requestId !== '') {\n            writer.uint32(10).string(message.requestId);\n        }\n        if (message.query !== undefined) {\n            exports.HistoryQuery.encode(message.query, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.response !== undefined) {\n            exports.HistoryResponse.encode(message.response, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseHistoryRPC);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.requestId = reader.string();\n                    break;\n                case 2:\n                    message.query = exports.HistoryQuery.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.response = exports.HistoryResponse.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseHistoryRPC);\n        if (object.requestId !== undefined && object.requestId !== null) {\n            message.requestId = String(object.requestId);\n        }\n        else {\n            message.requestId = '';\n        }\n        if (object.query !== undefined && object.query !== null) {\n            message.query = exports.HistoryQuery.fromJSON(object.query);\n        }\n        else {\n            message.query = undefined;\n        }\n        if (object.response !== undefined && object.response !== null) {\n            message.response = exports.HistoryResponse.fromJSON(object.response);\n        }\n        else {\n            message.response = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.requestId !== undefined && (obj.requestId = message.requestId);\n        message.query !== undefined &&\n            (obj.query = message.query\n                ? exports.HistoryQuery.toJSON(message.query)\n                : undefined);\n        message.response !== undefined &&\n            (obj.response = message.response\n                ? exports.HistoryResponse.toJSON(message.response)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseHistoryRPC);\n        if (object.requestId !== undefined && object.requestId !== null) {\n            message.requestId = object.requestId;\n        }\n        else {\n            message.requestId = '';\n        }\n        if (object.query !== undefined && object.query !== null) {\n            message.query = exports.HistoryQuery.fromPartial(object.query);\n        }\n        else {\n            message.query = undefined;\n        }\n        if (object.response !== undefined && object.response !== null) {\n            message.response = exports.HistoryResponse.fromPartial(object.response);\n        }\n        else {\n            message.response = undefined;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (const byte of arr) {\n        bin.push(String.fromCharCode(byte));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (minimal_1.default.util.Long !== long_1.default) {\n    minimal_1.default.util.Long = long_1.default;\n    minimal_1.default.configure();\n}\n//# sourceMappingURL=store.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ChatMessage = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst long_1 = __importDefault(require(\"long\"));\nconst minimal_1 = __importDefault(require(\"protobufjs/minimal\"));\nexports.protobufPackage = 'chat.v2';\nconst baseChatMessage = { timestamp: 0, nick: '' };\nexports.ChatMessage = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.timestamp !== 0) {\n            writer.uint32(8).uint64(message.timestamp);\n        }\n        if (message.nick !== '') {\n            writer.uint32(18).string(message.nick);\n        }\n        if (message.payload.length !== 0) {\n            writer.uint32(26).bytes(message.payload);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseChatMessage);\n        message.payload = new Uint8Array();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.timestamp = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.nick = reader.string();\n                    break;\n                case 3:\n                    message.payload = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseChatMessage);\n        message.payload = new Uint8Array();\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = Number(object.timestamp);\n        }\n        else {\n            message.timestamp = 0;\n        }\n        if (object.nick !== undefined && object.nick !== null) {\n            message.nick = String(object.nick);\n        }\n        else {\n            message.nick = '';\n        }\n        if (object.payload !== undefined && object.payload !== null) {\n            message.payload = bytesFromBase64(object.payload);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.timestamp !== undefined && (obj.timestamp = message.timestamp);\n        message.nick !== undefined && (obj.nick = message.nick);\n        message.payload !== undefined &&\n            (obj.payload = base64FromBytes(message.payload !== undefined ? message.payload : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseChatMessage);\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = 0;\n        }\n        if (object.nick !== undefined && object.nick !== null) {\n            message.nick = object.nick;\n        }\n        else {\n            message.nick = '';\n        }\n        if (object.payload !== undefined && object.payload !== null) {\n            message.payload = object.payload;\n        }\n        else {\n            message.payload = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (const byte of arr) {\n        bin.push(String.fromCharCode(byte));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (minimal_1.default.util.Long !== long_1.default) {\n    minimal_1.default.util.Long = long_1.default;\n    minimal_1.default.configure();\n}\n//# sourceMappingURL=chat_message.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.generateIv = exports.generateKeyForSymmetricEnc = exports.decrypt = exports.encrypt = void 0;\nconst index_1 = require(\"./index\");\nconst crypto = window.crypto || window.msCrypto;\nconst subtle = crypto.subtle || crypto.webkitSubtle;\nconst Algorithm = { name: 'AES-GCM', length: 128 };\nif (subtle === undefined) {\n    throw new Error('Failed to load Subtle CryptoAPI');\n}\nasync function encrypt(iv, key, clearText) {\n    return subtle\n        .importKey('raw', key, Algorithm, false, ['encrypt'])\n        .then((cryptoKey) => subtle.encrypt(Object.assign({ iv }, Algorithm), cryptoKey, clearText))\n        .then(Buffer.from);\n}\nexports.encrypt = encrypt;\nasync function decrypt(iv, key, cipherText) {\n    return subtle\n        .importKey('raw', key, Algorithm, false, ['decrypt'])\n        .then((cryptoKey) => subtle.decrypt(Object.assign({ iv }, Algorithm), cryptoKey, cipherText))\n        .then(Buffer.from);\n}\nexports.decrypt = decrypt;\nfunction generateKeyForSymmetricEnc() {\n    return crypto.getRandomValues(Buffer.alloc(index_1.SymmetricKeySize));\n}\nexports.generateKeyForSymmetricEnc = generateKeyForSymmetricEnc;\nfunction generateIv() {\n    const iv = new Uint8Array(index_1.IvSize);\n    crypto.getRandomValues(iv);\n    return iv;\n}\nexports.generateIv = generateIv;\n//# sourceMappingURL=browser.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.generateIv = exports.generateKeyForSymmetricEnc = exports.decrypt = exports.encrypt = void 0;\nconst crypto_1 = require(\"crypto\");\nconst index_1 = require(\"./index\");\nconst Algorithm = 'aes-256-gcm';\nasync function encrypt(iv, key, clearText) {\n    const cipher = crypto_1.createCipheriv(Algorithm, key, iv);\n    const a = cipher.update(clearText);\n    const b = cipher.final();\n    const tag = cipher.getAuthTag();\n    return Buffer.concat([a, b, tag]);\n}\nexports.encrypt = encrypt;\nasync function decrypt(iv, key, data) {\n    const tagStart = data.length - index_1.TagSize;\n    const cipherText = data.slice(0, tagStart);\n    const tag = data.slice(tagStart);\n    const decipher = crypto_1.createDecipheriv(Algorithm, key, iv);\n    decipher.setAuthTag(tag);\n    const a = decipher.update(cipherText);\n    const b = decipher.final();\n    return Buffer.concat([a, b]);\n}\nexports.decrypt = decrypt;\nfunction generateKeyForSymmetricEnc() {\n    return crypto_1.randomBytes(index_1.SymmetricKeySize);\n}\nexports.generateKeyForSymmetricEnc = generateKeyForSymmetricEnc;\nfunction generateIv() {\n    return crypto_1.randomBytes(index_1.IvSize);\n}\nexports.generateIv = generateIv;\n//# sourceMappingURL=node.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getStatusFleetNodes = exports.Environment = exports.Protocol = void 0;\n/**\n * Returns multiaddrs (inc. ip) of nim-waku nodes ran by Status.\n * Used as a temporary discovery helper until more parties run their own nodes.\n */\nconst axios_1 = __importDefault(require(\"axios\"));\nvar Protocol;\n(function (Protocol) {\n    Protocol[\"websocket\"] = \"websocket\";\n    Protocol[\"tcp\"] = \"tcp\";\n})(Protocol = exports.Protocol || (exports.Protocol = {}));\nvar Environment;\n(function (Environment) {\n    Environment[\"Test\"] = \"test\";\n    Environment[\"Prod\"] = \"prod\";\n})(Environment = exports.Environment || (exports.Environment = {}));\nasync function getStatusFleetNodes(env = Environment.Prod, protocol = Protocol.websocket) {\n    const res = await axios_1.default.get('https://fleets.status.im/', {\n        headers: { 'Content-Type': 'application/json' },\n    });\n    const wakuFleet = res.data.fleets[`wakuv2.${env}`];\n    switch (protocol) {\n        case Protocol.tcp:\n            return Object.values(wakuFleet['waku']);\n        default:\n            return Object.values(wakuFleet['waku-websocket']);\n    }\n}\nexports.getStatusFleetNodes = getStatusFleetNodes;\n//# sourceMappingURL=discover.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Waku = void 0;\nconst libp2p_1 = __importDefault(require(\"libp2p\"));\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore: No types available\nconst libp2p_mplex_1 = __importDefault(require(\"libp2p-mplex\"));\nconst noise_1 = require(\"libp2p-noise/dist/src/noise\");\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore: No types available\nconst libp2p_websockets_1 = __importDefault(require(\"libp2p-websockets\"));\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore: No types available\nconst filters_1 = __importDefault(require(\"libp2p-websockets/src/filters\"));\nconst ping_1 = __importDefault(require(\"libp2p/src/ping\"));\nconst multiaddr_1 = require(\"multiaddr\");\nconst peer_id_1 = __importDefault(require(\"peer-id\"));\nconst waku_light_push_1 = require(\"./waku_light_push\");\nconst waku_relay_1 = require(\"./waku_relay\");\nconst waku_store_1 = require(\"./waku_store\");\nconst websocketsTransportKey = libp2p_websockets_1.default.prototype[Symbol.toStringTag];\nclass Waku {\n    constructor(options, libp2p, store, lightPush) {\n        this.libp2p = libp2p;\n        this.relay = libp2p.pubsub;\n        this.store = store;\n        this.lightPush = lightPush;\n        this.keepAliveTimers = {};\n        const keepAlive = options.keepAlive || 0;\n        if (keepAlive !== 0) {\n            libp2p.connectionManager.on('peer:connect', (connection) => {\n                this.startKeepAlive(connection.remotePeer, keepAlive);\n            });\n            libp2p.connectionManager.on('peer:disconnect', (connection) => {\n                this.stopKeepAlive(connection.remotePeer);\n            });\n        }\n    }\n    /**\n     * Create new waku node\n     *\n     * @param options Takes the same options than `Libp2p`.\n     */\n    static async create(options) {\n        var _a, _b, _c;\n        // Get an object in case options or libp2p are undefined\n        const libp2pOpts = Object.assign({}, options === null || options === void 0 ? void 0 : options.libp2p);\n        // Default for Websocket filter is `all`:\n        // Returns all TCP and DNS based addresses, both with ws or wss.\n        libp2pOpts.config = Object.assign({\n            transport: {\n                [websocketsTransportKey]: {\n                    filter: filters_1.default.all,\n                },\n            },\n        }, (_a = options === null || options === void 0 ? void 0 : options.libp2p) === null || _a === void 0 ? void 0 : _a.config);\n        // Pass pubsub topic to relay\n        if (options === null || options === void 0 ? void 0 : options.pubsubTopic) {\n            libp2pOpts.config.pubsub = Object.assign({ pubsubTopic: options.pubsubTopic }, libp2pOpts.config.pubsub);\n        }\n        libp2pOpts.modules = Object.assign({}, (_b = options === null || options === void 0 ? void 0 : options.libp2p) === null || _b === void 0 ? void 0 : _b.modules);\n        // Default transport for libp2p is Websockets\n        libp2pOpts.modules = Object.assign({\n            transport: [libp2p_websockets_1.default],\n        }, (_c = options === null || options === void 0 ? void 0 : options.libp2p) === null || _c === void 0 ? void 0 : _c.modules);\n        // streamMuxer, connection encryption and pubsub are overridden\n        // as those are the only ones currently supported by Waku nodes.\n        libp2pOpts.modules = Object.assign(libp2pOpts.modules, {\n            streamMuxer: [libp2p_mplex_1.default],\n            connEncryption: [new noise_1.Noise(options === null || options === void 0 ? void 0 : options.staticNoiseKey)],\n            pubsub: waku_relay_1.WakuRelay,\n        });\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore: modules property is correctly set thanks to voodoo\n        const libp2p = await libp2p_1.default.create(libp2pOpts);\n        const wakuStore = new waku_store_1.WakuStore(libp2p, {\n            pubsubTopic: options === null || options === void 0 ? void 0 : options.pubsubTopic,\n        });\n        const wakuLightPush = new waku_light_push_1.WakuLightPush(libp2p);\n        await libp2p.start();\n        return new Waku(options ? options : {}, libp2p, wakuStore, wakuLightPush);\n    }\n    /**\n     * Dials to the provided peer.\n     *\n     * @param peer The peer to dial\n     */\n    async dial(peer) {\n        return this.libp2p.dialProtocol(peer, [waku_relay_1.RelayCodec, waku_store_1.StoreCodec]);\n    }\n    /**\n     * Add peer to address book, it will be auto-dialed in the background.\n     */\n    addPeerToAddressBook(peerId, multiaddrs) {\n        let peer;\n        if (typeof peerId === 'string') {\n            peer = peer_id_1.default.createFromB58String(peerId);\n        }\n        else {\n            peer = peerId;\n        }\n        const addresses = multiaddrs.map((addr) => {\n            if (typeof addr === 'string') {\n                return multiaddr_1.multiaddr(addr);\n            }\n            else {\n                return addr;\n            }\n        });\n        this.libp2p.peerStore.addressBook.set(peer, addresses);\n    }\n    async stop() {\n        return this.libp2p.stop();\n    }\n    /**\n     * Return the local multiaddr with peer id on which libp2p is listening.\n     * @throws if libp2p is not listening on localhost\n     */\n    getLocalMultiaddrWithID() {\n        const localMultiaddr = this.libp2p.multiaddrs.find((addr) => addr.toString().match(/127\\.0\\.0\\.1/));\n        if (!localMultiaddr || localMultiaddr.toString() === '') {\n            throw 'Not listening on localhost';\n        }\n        return localMultiaddr + '/p2p/' + this.libp2p.peerId.toB58String();\n    }\n    startKeepAlive(peerId, periodSecs) {\n        // Just in case a timer already exist for this peer\n        this.stopKeepAlive(peerId);\n        const peerIdStr = peerId.toB58String();\n        this.keepAliveTimers[peerIdStr] = setInterval(() => {\n            ping_1.default(this.libp2p, peerId);\n        }, periodSecs * 1000);\n    }\n    stopKeepAlive(peerId) {\n        const peerIdStr = peerId.toB58String();\n        if (this.keepAliveTimers[peerIdStr]) {\n            clearInterval(this.keepAliveTimers[peerIdStr]);\n            delete this.keepAliveTimers[peerIdStr];\n        }\n    }\n}\nexports.Waku = Waku;\n//# sourceMappingURL=waku.js.map","\"use strict\";\n/**\n * @hidden\n * @module\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RelayHeartbeat = void 0;\nconst heartbeat_1 = require(\"libp2p-gossipsub/src/heartbeat\");\nconst utils_1 = require(\"libp2p-gossipsub/src/utils\");\nconst constants = __importStar(require(\"./constants\"));\nconst get_relay_peers_1 = require(\"./get_relay_peers\");\nclass RelayHeartbeat extends heartbeat_1.Heartbeat {\n    /**\n     * @param {Object} gossipsub\n     * @constructor\n     */\n    constructor(gossipsub) {\n        super(gossipsub);\n    }\n    start() {\n        if (this._heartbeatTimer) {\n            return;\n        }\n        const heartbeat = this._heartbeat.bind(this);\n        const timeout = setTimeout(() => {\n            var _a;\n            heartbeat();\n            (_a = this._heartbeatTimer) === null || _a === void 0 ? void 0 : _a.runPeriodically(heartbeat, constants.RelayHeartbeatInterval);\n        }, constants.RelayHeartbeatInitialDelay);\n        this._heartbeatTimer = {\n            _intervalId: undefined,\n            runPeriodically: (fn, period) => {\n                // this._heartbeatTimer cannot be null, it is being assigned.\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                this._heartbeatTimer._intervalId = setInterval(fn, period);\n            },\n            cancel: () => {\n                var _a;\n                clearTimeout(timeout);\n                clearInterval((_a = this._heartbeatTimer) === null || _a === void 0 ? void 0 : _a._intervalId);\n            },\n        };\n    }\n    /**\n     * Unmounts the gossipsub protocol and shuts down every connection\n     * @override\n     * @returns {void}\n     */\n    stop() {\n        if (!this._heartbeatTimer) {\n            return;\n        }\n        this._heartbeatTimer.cancel();\n        this._heartbeatTimer = null;\n    }\n    /**\n     * Maintains the mesh and fanout maps in gossipsub.\n     *\n     * @returns {void}\n     */\n    _heartbeat() {\n        const { D, Dlo, Dhi, Dscore, Dout } = this.gossipsub._options;\n        this.gossipsub.heartbeatTicks++;\n        // cache scores through the heartbeat\n        const scores = new Map();\n        const getScore = (id) => {\n            let s = scores.get(id);\n            if (s === undefined) {\n                s = this.gossipsub.score.score(id);\n                scores.set(id, s);\n            }\n            return s;\n        };\n        // peer id => topic[]\n        const toGraft = new Map();\n        // peer id => topic[]\n        const toPrune = new Map();\n        // peer id => don't px\n        const noPX = new Map();\n        // clean up expired backoffs\n        this.gossipsub._clearBackoff();\n        // clean up peerhave/iasked counters\n        this.gossipsub.peerhave.clear();\n        this.gossipsub.iasked.clear();\n        // apply IWANT request penalties\n        this.gossipsub._applyIwantPenalties();\n        // ensure direct peers are connected\n        this.gossipsub._directConnect();\n        // maintain the mesh for topics we have joined\n        this.gossipsub.mesh.forEach((peers, topic) => {\n            // prune/graft helper functions (defined per topic)\n            const prunePeer = (id) => {\n                this.gossipsub.log('HEARTBEAT: Remove mesh link to %s in %s', id, topic);\n                // update peer score\n                this.gossipsub.score.prune(id, topic);\n                // add prune backoff record\n                this.gossipsub._addBackoff(id, topic);\n                // remove peer from mesh\n                peers.delete(id);\n                // add to toPrune\n                const topics = toPrune.get(id);\n                if (!topics) {\n                    toPrune.set(id, [topic]);\n                }\n                else {\n                    topics.push(topic);\n                }\n            };\n            const graftPeer = (id) => {\n                this.gossipsub.log('HEARTBEAT: Add mesh link to %s in %s', id, topic);\n                // update peer score\n                this.gossipsub.score.graft(id, topic);\n                // add peer to mesh\n                peers.add(id);\n                // add to toGraft\n                const topics = toGraft.get(id);\n                if (!topics) {\n                    toGraft.set(id, [topic]);\n                }\n                else {\n                    topics.push(topic);\n                }\n            };\n            // drop all peers with negative score, without PX\n            peers.forEach((id) => {\n                const score = getScore(id);\n                if (score < 0) {\n                    this.gossipsub.log('HEARTBEAT: Prune peer %s with negative score: score=%d, topic=%s', id, score, topic);\n                    prunePeer(id);\n                    noPX.set(id, true);\n                }\n            });\n            // do we have enough peers?\n            if (peers.size < Dlo) {\n                const backoff = this.gossipsub.backoff.get(topic);\n                const ineed = D - peers.size;\n                const peersSet = get_relay_peers_1.getRelayPeers(this.gossipsub, topic, ineed, (id) => {\n                    // filter out mesh peers, direct peers, peers we are backing off, peers with negative score\n                    return (!peers.has(id) &&\n                        !this.gossipsub.direct.has(id) &&\n                        (!backoff || !backoff.has(id)) &&\n                        getScore(id) >= 0);\n                });\n                peersSet.forEach(graftPeer);\n            }\n            // do we have to many peers?\n            if (peers.size > Dhi) {\n                let peersArray = Array.from(peers);\n                // sort by score\n                peersArray.sort((a, b) => getScore(b) - getScore(a));\n                // We keep the first D_score peers by score and the remaining up to D randomly\n                // under the constraint that we keep D_out peers in the mesh (if we have that many)\n                peersArray = peersArray\n                    .slice(0, Dscore)\n                    .concat(utils_1.shuffle(peersArray.slice(Dscore)));\n                // count the outbound peers we are keeping\n                let outbound = 0;\n                peersArray.slice(0, D).forEach((p) => {\n                    if (this.gossipsub.outbound.get(p)) {\n                        outbound++;\n                    }\n                });\n                // if it's less than D_out, bubble up some outbound peers from the random selection\n                if (outbound < Dout) {\n                    const rotate = (i) => {\n                        // rotate the peersArray to the right and put the ith peer in the front\n                        const p = peersArray[i];\n                        for (let j = i; j > 0; j--) {\n                            peersArray[j] = peersArray[j - 1];\n                        }\n                        peersArray[0] = p;\n                    };\n                    // first bubble up all outbound peers already in the selection to the front\n                    if (outbound > 0) {\n                        let ihave = outbound;\n                        for (let i = 1; i < D && ihave > 0; i++) {\n                            if (this.gossipsub.outbound.get(peersArray[i])) {\n                                rotate(i);\n                                ihave--;\n                            }\n                        }\n                    }\n                    // now bubble up enough outbound peers outside the selection to the front\n                    let ineed = D - outbound;\n                    for (let i = D; i < peersArray.length && ineed > 0; i++) {\n                        if (this.gossipsub.outbound.get(peersArray[i])) {\n                            rotate(i);\n                            ineed--;\n                        }\n                    }\n                }\n                // prune the excess peers\n                peersArray.slice(D).forEach(prunePeer);\n            }\n            // do we have enough outbound peers?\n            if (peers.size >= Dlo) {\n                // count the outbound peers we have\n                let outbound = 0;\n                peers.forEach((p) => {\n                    if (this.gossipsub.outbound.get(p)) {\n                        outbound++;\n                    }\n                });\n                // if it's less than D_out, select some peers with outbound connections and graft them\n                if (outbound < Dout) {\n                    const ineed = Dout - outbound;\n                    const backoff = this.gossipsub.backoff.get(topic);\n                    get_relay_peers_1.getRelayPeers(this.gossipsub, topic, ineed, (id) => {\n                        // filter our current mesh peers, direct peers, peers we are backing off, peers with negative score\n                        return (!peers.has(id) &&\n                            !this.gossipsub.direct.has(id) &&\n                            (!backoff || !backoff.has(id)) &&\n                            getScore(id) >= 0);\n                    }).forEach(graftPeer);\n                }\n            }\n            // should we try to improve the mesh with opportunistic grafting?\n            if (this.gossipsub.heartbeatTicks %\n                constants.RelayOpportunisticGraftTicks ===\n                0 &&\n                peers.size > 1) {\n                // Opportunistic grafting works as follows: we check the median score of peers in the\n                // mesh; if this score is below the opportunisticGraftThreshold, we select a few peers at\n                // random with score over the median.\n                // The intention is to (slowly) improve an under performing mesh by introducing good\n                // scoring peers that may have been gossiping at us. This allows us to get out of sticky\n                // situations where we are stuck with poor peers and also recover from churn of good peers.\n                // now compute the median peer score in the mesh\n                const peersList = Array.from(peers).sort((a, b) => getScore(a) - getScore(b));\n                const medianIndex = peers.size / 2;\n                const medianScore = getScore(peersList[medianIndex]);\n                // if the median score is below the threshold, select a better peer (if any) and GRAFT\n                if (medianScore <\n                    this.gossipsub._options.scoreThresholds.opportunisticGraftThreshold) {\n                    const backoff = this.gossipsub.backoff.get(topic);\n                    const peersToGraft = get_relay_peers_1.getRelayPeers(this.gossipsub, topic, constants.RelayOpportunisticGraftPeers, (id) => {\n                        // filter out current mesh peers, direct peers, peers we are backing off, peers below or at threshold\n                        return (peers.has(id) &&\n                            !this.gossipsub.direct.has(id) &&\n                            (!backoff || !backoff.has(id)) &&\n                            getScore(id) > medianScore);\n                    });\n                    peersToGraft.forEach((id) => {\n                        this.gossipsub.log('HEARTBEAT: Opportunistically graft peer %s on topic %s', id, topic);\n                        graftPeer(id);\n                    });\n                }\n            }\n            // 2nd arg are mesh peers excluded from gossip. We have already pushed\n            // messages to them, so its redundant to gossip IHAVEs.\n            this.gossipsub._emitGossip(topic, peers);\n        });\n        // expire fanout for topics we haven't published to in a while\n        const now = this.gossipsub._now();\n        this.gossipsub.lastpub.forEach((lastpub, topic) => {\n            if (lastpub + constants.RelayFanoutTTL < now) {\n                this.gossipsub.fanout.delete(topic);\n                this.gossipsub.lastpub.delete(topic);\n            }\n        });\n        // maintain our fanout for topics we are publishing but we have not joined\n        this.gossipsub.fanout.forEach((fanoutPeers, topic) => {\n            // checks whether our peers are still in the topic and have a score above the publish threshold\n            const topicPeers = this.gossipsub.topics.get(topic);\n            fanoutPeers.forEach((id) => {\n                if (!(topicPeers === null || topicPeers === void 0 ? void 0 : topicPeers.has(id)) ||\n                    getScore(id) <\n                        this.gossipsub._options.scoreThresholds.publishThreshold) {\n                    fanoutPeers.delete(id);\n                }\n            });\n            // do we need more peers?\n            if (fanoutPeers.size < D) {\n                const ineed = D - fanoutPeers.size;\n                const peersSet = get_relay_peers_1.getRelayPeers(this.gossipsub, topic, ineed, (id) => {\n                    // filter out existing fanout peers, direct peers, and peers with score above the publish threshold\n                    return (!fanoutPeers.has(id) &&\n                        !this.gossipsub.direct.has(id) &&\n                        getScore(id) >=\n                            this.gossipsub._options.scoreThresholds.publishThreshold);\n                });\n                peersSet.forEach((id) => {\n                    fanoutPeers.add(id);\n                });\n            }\n            // 2nd arg are fanout peers excluded from gossip.\n            // We have already pushed messages to them, so its redundant to gossip IHAVEs\n            this.gossipsub._emitGossip(topic, fanoutPeers);\n        });\n        // send coalesced GRAFT/PRUNE messages (will piggyback gossip)\n        this.gossipsub._sendGraftPrune(toGraft, toPrune, noPX);\n        // flush pending gossip that wasn't piggybacked above\n        this.gossipsub._flush();\n        // advance the message history window\n        this.gossipsub.messageCache.shift();\n        this.gossipsub.emit('gossipsub:heartbeat');\n    }\n}\nexports.RelayHeartbeat = RelayHeartbeat;\n//# sourceMappingURL=relay_heartbeat.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PushRPC = void 0;\nconst minimal_1 = require(\"protobufjs/minimal\");\nconst uuid_1 = require(\"uuid\");\nconst proto = __importStar(require(\"../../proto/waku/v2/light_push\"));\nconst waku_relay_1 = require(\"../waku_relay\");\nclass PushRPC {\n    constructor(proto) {\n        this.proto = proto;\n    }\n    static createRequest(message, pubsubTopic = waku_relay_1.DefaultPubsubTopic) {\n        return new PushRPC({\n            requestId: uuid_1.v4(),\n            request: {\n                message: message.proto,\n                pubsubTopic,\n            },\n            response: undefined,\n        });\n    }\n    static decode(bytes) {\n        const res = proto.PushRPC.decode(minimal_1.Reader.create(bytes));\n        return new PushRPC(res);\n    }\n    encode() {\n        return proto.PushRPC.encode(this.proto).finish();\n    }\n    get query() {\n        return this.proto.request;\n    }\n    get response() {\n        return this.proto.response;\n    }\n}\nexports.PushRPC = PushRPC;\n//# sourceMappingURL=push_rpc.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HistoryRPC = exports.Direction = void 0;\nconst minimal_1 = require(\"protobufjs/minimal\");\nconst uuid_1 = require(\"uuid\");\nconst proto = __importStar(require(\"../../proto/waku/v2/store\"));\nvar Direction;\n(function (Direction) {\n    Direction[\"BACKWARD\"] = \"backward\";\n    Direction[\"FORWARD\"] = \"forward\";\n})(Direction = exports.Direction || (exports.Direction = {}));\nclass HistoryRPC {\n    constructor(proto) {\n        this.proto = proto;\n    }\n    /**\n     * Create History Query.\n     */\n    static createQuery(options) {\n        const direction = directionToProto(options.direction);\n        const pagingInfo = {\n            pageSize: options.pageSize,\n            cursor: options.cursor,\n            direction,\n        };\n        const contentFilters = options.contentTopics.map((contentTopic) => {\n            return { contentTopic };\n        });\n        return new HistoryRPC({\n            requestId: uuid_1.v4(),\n            query: {\n                pubsubTopic: options.pubsubTopic,\n                contentFilters,\n                pagingInfo,\n                startTime: undefined,\n                endTime: undefined,\n            },\n            response: undefined,\n        });\n    }\n    static decode(bytes) {\n        const res = proto.HistoryRPC.decode(minimal_1.Reader.create(bytes));\n        return new HistoryRPC(res);\n    }\n    encode() {\n        return proto.HistoryRPC.encode(this.proto).finish();\n    }\n    get query() {\n        return this.proto.query;\n    }\n    get response() {\n        return this.proto.response;\n    }\n}\nexports.HistoryRPC = HistoryRPC;\nfunction directionToProto(direction) {\n    switch (direction) {\n        case Direction.BACKWARD:\n            return proto.PagingInfo_Direction.DIRECTION_BACKWARD_UNSPECIFIED;\n        case Direction.FORWARD:\n            return proto.PagingInfo_Direction.DIRECTION_FORWARD;\n        default:\n            return proto.PagingInfo_Direction.DIRECTION_BACKWARD_UNSPECIFIED;\n    }\n}\n//# sourceMappingURL=history_rpc.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ChatMessage = void 0;\nconst minimal_1 = require(\"protobufjs/minimal\");\nconst proto = __importStar(require(\"../../proto/chat/v2/chat_message\"));\n/**\n * ChatMessage is used by the various show case waku apps that demonstrates\n * waku used as the network layer for chat group applications.\n *\n * This is included to help building PoC and MVPs. Apps that aim to be\n * production ready should use a more appropriate data structure.\n */\nclass ChatMessage {\n    constructor(proto) {\n        this.proto = proto;\n    }\n    /**\n     * Create Chat Message with a utf-8 string as payload.\n     */\n    static fromUtf8String(timestamp, nick, text) {\n        const timestampNumber = Math.floor(timestamp.valueOf() / 1000);\n        const payload = Buffer.from(text, 'utf-8');\n        return new ChatMessage({\n            timestamp: timestampNumber,\n            nick,\n            payload,\n        });\n    }\n    /**\n     * Decode a protobuf payload to a ChatMessage.\n     * @param bytes The payload to decode.\n     */\n    static decode(bytes) {\n        const protoMsg = proto.ChatMessage.decode(minimal_1.Reader.create(bytes));\n        return new ChatMessage(protoMsg);\n    }\n    /**\n     * Encode this ChatMessage to a byte array, to be used as a protobuf payload.\n     * @returns The encoded payload.\n     */\n    encode() {\n        return proto.ChatMessage.encode(this.proto).finish();\n    }\n    get timestamp() {\n        return new Date(this.proto.timestamp * 1000);\n    }\n    get nick() {\n        return this.proto.nick;\n    }\n    get payloadAsUtf8() {\n        if (!this.proto.payload) {\n            return '';\n        }\n        return Array.from(this.proto.payload)\n            .map((char) => {\n            return String.fromCharCode(char);\n        })\n            .join('');\n    }\n}\nexports.ChatMessage = ChatMessage;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HistoryRPC = exports.HistoryResponse = exports.HistoryQuery = exports.ContentFilter = exports.PagingInfo_Direction = exports.PagingInfo = exports.Index = exports.WakuMessage = exports.ChatMessage = void 0;\nvar chat_message_1 = require(\"./chat/v2/chat_message\");\nObject.defineProperty(exports, \"ChatMessage\", { enumerable: true, get: function () { return chat_message_1.ChatMessage; } });\nvar message_1 = require(\"./waku/v2/message\");\nObject.defineProperty(exports, \"WakuMessage\", { enumerable: true, get: function () { return message_1.WakuMessage; } });\nvar store_1 = require(\"./waku/v2/store\");\nObject.defineProperty(exports, \"Index\", { enumerable: true, get: function () { return store_1.Index; } });\nObject.defineProperty(exports, \"PagingInfo\", { enumerable: true, get: function () { return store_1.PagingInfo; } });\nObject.defineProperty(exports, \"PagingInfo_Direction\", { enumerable: true, get: function () { return store_1.PagingInfo_Direction; } });\nObject.defineProperty(exports, \"ContentFilter\", { enumerable: true, get: function () { return store_1.ContentFilter; } });\nObject.defineProperty(exports, \"HistoryQuery\", { enumerable: true, get: function () { return store_1.HistoryQuery; } });\nObject.defineProperty(exports, \"HistoryResponse\", { enumerable: true, get: function () { return store_1.HistoryResponse; } });\nObject.defineProperty(exports, \"HistoryRPC\", { enumerable: true, get: function () { return store_1.HistoryRPC; } });\n//# sourceMappingURL=index.js.map","import { KeyPair } from '../crypto';\nimport { bufToHex, hexToBuf } from 'js-waku/lib/utils';\n\n/**\n * Save keypair to storage, encrypted with password\n */\nexport async function saveKeyPairToStorage(\n  ethDmKeyPair: KeyPair,\n  password: string\n) {\n  const { salt, iv, cipher } = await encryptKey(ethDmKeyPair, password);\n\n  const data = {\n    salt: bufToHex(salt),\n    iv: bufToHex(iv),\n    cipher: bufToHex(cipher),\n  };\n\n  localStorage.setItem('cipherEthDmKeyPair', JSON.stringify(data));\n}\n\n/**\n * Load keypair from storage, decrypted using password\n */\nexport async function loadKeyPairFromStorage(\n  password: string\n): Promise<KeyPair | undefined> {\n  const str = localStorage.getItem('cipherEthDmKeyPair');\n  if (!str) return;\n  const data = JSON.parse(str);\n\n  const salt = hexToBuf(data.salt);\n  const iv = hexToBuf(data.iv);\n  const cipher = hexToBuf(data.cipher);\n\n  return await decryptKey(salt, iv, cipher, password);\n}\n\n/**\n * Use password user as key material for wrap key.\n */\nfunction getKeyMaterial(password: string): Promise<CryptoKey> {\n  const enc = new TextEncoder();\n  return window.crypto.subtle.importKey(\n    'raw',\n    enc.encode(password),\n    { name: 'PBKDF2' },\n    false,\n    ['deriveBits', 'deriveKey']\n  );\n}\n\n/**\n * get key to store password\n */\nfunction getWrapKey(keyMaterial: CryptoKey, salt: Uint8Array) {\n  return window.crypto.subtle.deriveKey(\n    {\n      name: 'PBKDF2',\n      salt: salt,\n      iterations: 100000,\n      hash: 'SHA-256',\n    },\n    keyMaterial,\n    { name: 'AES-GCM', length: 256 },\n    true,\n    ['encrypt', 'decrypt']\n  );\n}\n\n/**\n * Encrypt Eth-DM KeyPair using provided password\n */\nasync function encryptKey(ethDmKeyPair: KeyPair, password: string) {\n  const keyMaterial = await getKeyMaterial(password);\n  const salt = window.crypto.getRandomValues(new Uint8Array(16));\n  const wrappingKey = await getWrapKey(keyMaterial, salt);\n\n  const enc = new TextEncoder();\n  const encodedKeyPair = enc.encode(JSON.stringify(ethDmKeyPair));\n\n  const iv = window.crypto.getRandomValues(new Uint8Array(12));\n  const cipher = await window.crypto.subtle.encrypt(\n    {\n      name: 'AES-GCM',\n      iv: iv,\n    },\n    wrappingKey,\n    encodedKeyPair\n  );\n\n  return { salt, iv, cipher };\n}\n\n/**\n * Derive a key from a password, and use the key to decrypt the cipher key pair.\n */\nasync function decryptKey(\n  salt: Buffer,\n  iv: Buffer,\n  cipherKeyPair: Buffer,\n  password: string\n): Promise<KeyPair | undefined> {\n  const keyMaterial = await getKeyMaterial(password);\n  const key = await getWrapKey(keyMaterial, salt);\n\n  try {\n    let decrypted = await window.crypto.subtle.decrypt(\n      {\n        name: 'AES-GCM',\n        iv: iv,\n      },\n      key,\n      cipherKeyPair\n    );\n\n    let dec = new TextDecoder();\n    return JSON.parse(dec.decode(decrypted));\n  } catch (e) {\n    return;\n  }\n}\n","import { Button } from '@material-ui/core';\nimport React from 'react';\nimport { loadKeyPairFromStorage } from './key_pair_storage';\nimport { KeyPair } from '../crypto';\n\nexport interface Props {\n  setEthDmKeyPair: (keyPair: KeyPair) => void;\n  disabled: boolean;\n  password: string | undefined;\n}\n\nexport function LoadKeyPair({ password, disabled, setEthDmKeyPair }: Props) {\n  const loadKeyPair = () => {\n    if (disabled) return;\n    if (!password) return;\n    loadKeyPairFromStorage(password).then((keyPair: KeyPair | undefined) => {\n      if (!keyPair) return;\n      console.log('EthDm KeyPair loaded from storage');\n      setEthDmKeyPair(keyPair);\n    });\n  };\n\n  return (\n    <Button\n      variant=\"contained\"\n      color=\"primary\"\n      onClick={loadKeyPair}\n      disabled={!password || disabled}\n    >\n      Load Eth-DM Key Pair from storage\n    </Button>\n  );\n}\n","import { Button } from '@material-ui/core';\nimport React from 'react';\nimport { KeyPair } from '../crypto';\nimport { saveKeyPairToStorage } from './key_pair_storage';\n\nexport interface Props {\n  ethDmKeyPair: KeyPair | undefined;\n  password: string | undefined;\n}\n\nexport function SaveKeyPair({ password, ethDmKeyPair }: Props) {\n  const saveKeyPair = () => {\n    if (!ethDmKeyPair) return;\n    if (!password) return;\n    saveKeyPairToStorage(ethDmKeyPair, password).then(() => {\n      console.log('EthDm KeyPair saved to storage');\n    });\n  };\n\n  return (\n    <Button\n      variant=\"contained\"\n      color=\"primary\"\n      onClick={saveKeyPair}\n      disabled={!password || !ethDmKeyPair}\n    >\n      Save Eth-DM Key Pair to storage\n    </Button>\n  );\n}\n","import * as protobuf from 'protobufjs/light';\n\nexport interface PublicKeyMessagePayload {\n  ethDmPublicKey: Uint8Array;\n  ethAddress: Uint8Array;\n  signature: Uint8Array;\n}\n\nconst Root = protobuf.Root,\n  Type = protobuf.Type,\n  Field = protobuf.Field;\n\n/**\n * Message used to communicate the Eth-Dm public key linked to a given Ethereum account\n */\nexport class PublicKeyMessage {\n  private static Type = new Type('PublicKeyMessage')\n    .add(new Field('ethDmPublicKey', 1, 'bytes'))\n    .add(new Field('ethAddress', 2, 'bytes'))\n    .add(new Field('signature', 3, 'bytes'));\n  private static Root = new Root()\n    .define('messages')\n    .add(PublicKeyMessage.Type);\n\n  constructor(public payload: PublicKeyMessagePayload) {}\n\n  public encode(): Uint8Array {\n    const message = PublicKeyMessage.Type.create(this.payload);\n    return PublicKeyMessage.Type.encode(message).finish();\n  }\n\n  public static decode(\n    bytes: Uint8Array | Buffer\n  ): PublicKeyMessage | undefined {\n    const payload = PublicKeyMessage.Type.decode(\n      bytes\n    ) as unknown as PublicKeyMessagePayload;\n    if (!payload.signature || !payload.ethDmPublicKey || !payload.ethAddress) {\n      console.log('Field missing on decoded Public Key Message', payload);\n      return;\n    }\n    return new PublicKeyMessage(payload);\n  }\n\n  get ethDmPublicKey(): Uint8Array {\n    return this.payload.ethDmPublicKey;\n  }\n\n  get ethAddress(): Uint8Array {\n    return this.payload.ethAddress;\n  }\n\n  get signature(): Uint8Array {\n    return this.payload.signature;\n  }\n}\n\nexport interface DirectMessagePayload {\n  toAddress: Uint8Array;\n  message: string;\n}\n\n/**\n * Direct Encrypted Message used for private communication over the Waku network.\n */\nexport class DirectMessage {\n  private static Type = new Type('DirectMessage')\n    .add(new Field('toAddress', 1, 'bytes'))\n    .add(new Field('message', 2, 'string'));\n  private static Root = new Root().define('messages').add(DirectMessage.Type);\n\n  constructor(public payload: DirectMessagePayload) {}\n\n  public encode(): Uint8Array {\n    const message = DirectMessage.Type.create(this.payload);\n    return DirectMessage.Type.encode(message).finish();\n  }\n\n  public static decode(bytes: Uint8Array | Buffer): DirectMessage | undefined {\n    const payload = DirectMessage.Type.decode(\n      bytes\n    ) as unknown as DirectMessagePayload;\n    if (!payload.toAddress || !payload.message) {\n      console.log('Field missing on decoded Direct Message', payload);\n      return;\n    }\n    return new DirectMessage(payload);\n  }\n\n  get toAddress(): Uint8Array {\n    return this.payload.toAddress;\n  }\n\n  get message(): string {\n    return this.payload.message;\n  }\n}\n","import '@ethersproject/shims';\n\nimport { ethers } from 'ethers';\nimport { Signer } from '@ethersproject/abstract-signer';\nimport { PublicKeyMessage } from './messaging/wire';\nimport { hexToBuf, equalByteArrays, bufToHex } from 'js-waku/lib/utils';\nimport {\n  generatePrivateKey,\n  getPublicKey,\n} from 'js-waku/lib/waku_message/version_1';\n\nexport interface KeyPair {\n  privateKey: Uint8Array;\n  publicKey: Uint8Array;\n}\n\n/**\n * Use the signature of the Salt (\"Salt for eth-dm...\") as\n * the entropy for the EthCrypto keypair. Note that the entropy is hashed with keccak256\n * to make the private key.\n */\nexport async function generateEthDmKeyPair(): Promise<KeyPair> {\n  const privateKey = generatePrivateKey();\n  const publicKey = getPublicKey(privateKey);\n  return { privateKey, publicKey };\n}\n\n/**\n * Sign the Eth-DM public key with Web3. This can then be published to let other\n * users know to use this Eth-DM public key to encrypt messages for the\n * Ethereum Address holder.\n */\nexport async function createPublicKeyMessage(\n  web3Signer: Signer,\n  ethDmPublicKey: Uint8Array\n): Promise<PublicKeyMessage> {\n  const ethAddress = await web3Signer.getAddress();\n  const signature = await web3Signer.signMessage(\n    formatPublicKeyForSignature(ethDmPublicKey)\n  );\n\n  return new PublicKeyMessage({\n    ethDmPublicKey: ethDmPublicKey,\n    ethAddress: hexToBuf(ethAddress),\n    signature: hexToBuf(signature),\n  });\n}\n\n/**\n * Validate that the EthDm Public Key was signed by the holder of the given Ethereum address.\n */\nexport function validatePublicKeyMessage(msg: PublicKeyMessage): boolean {\n  const formattedMsg = formatPublicKeyForSignature(msg.ethDmPublicKey);\n  try {\n    const sigAddress = ethers.utils.verifyMessage(formattedMsg, msg.signature);\n    return equalByteArrays(sigAddress, msg.ethAddress);\n  } catch (e) {\n    console.log(\n      'Failed to verify signature for Public Key Message',\n      formattedMsg,\n      msg\n    );\n    return false;\n  }\n}\n\n/**\n * Prepare Eth-Dm Public key to be signed for publication.\n * The public key is set in on Object `{ ethDmPublicKey: string; }`, converted\n * to JSON and then hashed with Keccak256.\n * The usage of the object helps ensure the signature is only used in an Eth-DM\n * context.\n */\nfunction formatPublicKeyForSignature(ethDmPublicKey: Uint8Array): string {\n  return JSON.stringify({\n    ethDmPublicKey: bufToHex(ethDmPublicKey),\n  });\n}\n","import { TextField } from '@material-ui/core';\nimport React, { ChangeEvent } from 'react';\n\ninterface Props {\n  password: string | undefined;\n  setPassword: (password: string) => void;\n}\n\nexport default function PasswordInput({ password, setPassword }: Props) {\n  const handlePasswordChange = (event: ChangeEvent<HTMLInputElement>) => {\n    setPassword(event.target.value);\n  };\n\n  return (\n    <TextField\n      id=\"password-input\"\n      label=\"Password\"\n      variant=\"filled\"\n      type=\"password\"\n      onChange={handlePasswordChange}\n      value={password}\n    />\n  );\n}\n","import { Button } from '@material-ui/core';\nimport { LoadKeyPair } from './LoadKeyPair';\nimport { SaveKeyPair } from './SaveKeyPair';\nimport React, { useState } from 'react';\nimport { generateEthDmKeyPair, KeyPair } from '../crypto';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PasswordInput from './PasswordInput';\n\nconst useStyles = makeStyles({\n  root: {\n    textAlign: 'center',\n    display: 'flex',\n    alignItems: 'center',\n    flexDirection: 'column',\n    margin: '5px',\n  },\n  generate: { margin: '5px' },\n  storage: {\n    margin: '5px',\n  },\n  loadSave: {\n    display: 'flex',\n    flexDirection: 'row',\n    margin: '5px',\n  },\n  loadSaveButton: {\n    margin: '5px',\n  },\n});\n\nexport interface Props {\n  ethDmKeyPair: KeyPair | undefined;\n  setEthDmKeyPair: (keyPair: KeyPair) => void;\n}\n\nexport default function KeyPairHandling({\n  ethDmKeyPair,\n  setEthDmKeyPair,\n}: Props) {\n  const classes = useStyles();\n\n  const [password, setPassword] = useState<string>();\n\n  const generateKeyPair = () => {\n    if (ethDmKeyPair) return;\n\n    generateEthDmKeyPair()\n      .then((keyPair) => {\n        setEthDmKeyPair(keyPair);\n      })\n      .catch((e) => {\n        console.error('Failed to generate Key Pair', e);\n      });\n  };\n\n  return (\n    <div className={classes.root}>\n      <Button\n        className={classes.generate}\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={generateKeyPair}\n        disabled={!!ethDmKeyPair}\n      >\n        Generate Eth-DM Key Pair\n      </Button>\n      <div className={classes.storage}>\n        <PasswordInput\n          password={password}\n          setPassword={(p) => setPassword(p)}\n        />\n        <div className={classes.loadSave}>\n          <div className={classes.loadSaveButton}>\n            <LoadKeyPair\n              setEthDmKeyPair={(keyPair) => setEthDmKeyPair(keyPair)}\n              disabled={!!ethDmKeyPair}\n              password={password}\n            />\n          </div>\n          <div className={classes.loadSaveButton}>\n            <SaveKeyPair ethDmKeyPair={ethDmKeyPair} password={password} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { Dispatch, SetStateAction } from 'react';\nimport { getStatusFleetNodes, Waku, WakuMessage } from 'js-waku';\nimport { DirectMessage, PublicKeyMessage } from './messaging/wire';\nimport { validatePublicKeyMessage } from './crypto';\nimport { Message } from './messaging/Messages';\nimport { bufToHex, equalByteArrays } from 'js-waku/lib/utils';\n\nexport const PublicKeyContentTopic = '/eth-dm/1/public-key/proto';\nexport const DirectMessageContentTopic = '/eth-dm/1/direct-message/proto';\n\nexport async function initWaku(): Promise<Waku> {\n  const waku = await Waku.create({});\n\n  // Dial all nodes it can find\n  getStatusFleetNodes().then((nodes) => {\n    nodes.forEach((addr) => {\n      waku.dial(addr);\n    });\n  });\n\n  // Wait to be connected to at least one peer\n  await new Promise((resolve, reject) => {\n    // If we are not connected to any peer within 10sec let's just reject\n    // As we are not implementing connection management in this example\n\n    setTimeout(reject, 10000);\n    waku.libp2p.connectionManager.on('peer:connect', () => {\n      resolve(null);\n    });\n  });\n\n  return waku;\n}\n\nexport function handlePublicKeyMessage(\n  myAddress: string,\n  setter: Dispatch<SetStateAction<Map<string, string>>>,\n  msg: WakuMessage\n) {\n  console.log('Public Key Message received:', msg);\n  if (!msg.payload) return;\n  const publicKeyMsg = PublicKeyMessage.decode(msg.payload);\n  if (!publicKeyMsg) return;\n  const ethDmPublicKey = bufToHex(publicKeyMsg.ethDmPublicKey);\n  console.log(ethDmPublicKey, myAddress);\n  if (myAddress && equalByteArrays(publicKeyMsg.ethAddress, myAddress)) return;\n\n  const res = validatePublicKeyMessage(publicKeyMsg);\n  console.log('Is Public Key Message valid?', res);\n\n  if (res) {\n    setter((prevPks: Map<string, string>) => {\n      prevPks.set(bufToHex(publicKeyMsg.ethAddress), ethDmPublicKey);\n      return new Map(prevPks);\n    });\n  }\n}\n\nexport async function handleDirectMessage(\n  setter: Dispatch<SetStateAction<Message[]>>,\n  privateKey: Uint8Array,\n  address: string,\n  wakuMsg: WakuMessage\n) {\n  console.log('Direct Message received:', wakuMsg);\n  if (!wakuMsg.payload) return;\n  const directMessage = DirectMessage.decode(wakuMsg.payload);\n  if (!directMessage) {\n    console.log('Failed to decode Direct Message');\n    return;\n  }\n  if (!equalByteArrays(directMessage.toAddress, address)) return;\n\n  const timestamp = wakuMsg.timestamp ? wakuMsg.timestamp : new Date();\n\n  console.log('Message decrypted:', directMessage.message);\n  setter((prevMsgs: Message[]) => {\n    const copy = prevMsgs.slice();\n    copy.push({\n      text: directMessage.message,\n      timestamp: timestamp,\n    });\n    return copy;\n  });\n}\n","import { Button } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport { createPublicKeyMessage, KeyPair } from './crypto';\nimport { PublicKeyMessage } from './messaging/wire';\nimport { WakuMessage, Waku } from 'js-waku';\nimport { Signer } from '@ethersproject/abstract-signer';\nimport { PublicKeyContentTopic } from './waku';\n\ninterface Props {\n  ethDmKeyPair: KeyPair | undefined;\n  waku: Waku | undefined;\n  signer: Signer | undefined;\n}\n\nexport default function BroadcastPublicKey({\n  signer,\n  ethDmKeyPair,\n  waku,\n}: Props) {\n  const [publicKeyMsg, setPublicKeyMsg] = useState<PublicKeyMessage>();\n\n  const broadcastPublicKey = () => {\n    if (!ethDmKeyPair) return;\n    if (!signer) return;\n    if (!waku) return;\n\n    if (publicKeyMsg) {\n      encodePublicKeyWakuMessage(publicKeyMsg)\n        .then((wakuMsg) => {\n          waku.lightPush.push(wakuMsg).catch((e) => {\n            console.error('Failed to send Public Key Message', e);\n          });\n        })\n        .catch((e) => {\n          console.log('Failed to encode Public Key Message in Waku Message');\n        });\n    } else {\n      createPublicKeyMessage(signer, ethDmKeyPair.publicKey)\n        .then((msg) => {\n          setPublicKeyMsg(msg);\n          encodePublicKeyWakuMessage(msg)\n            .then((wakuMsg) => {\n              waku.lightPush\n                .push(wakuMsg)\n                .then((res) => console.log('Public Key Message pushed', res))\n                .catch((e) => {\n                  console.error('Failed to send Public Key Message', e);\n                });\n            })\n            .catch((e) => {\n              console.log(\n                'Failed to encode Public Key Message in Waku Message'\n              );\n            });\n        })\n        .catch((e) => {\n          console.error('Failed to create public key message', e);\n        });\n    }\n  };\n\n  return (\n    <Button\n      variant=\"contained\"\n      color=\"primary\"\n      onClick={broadcastPublicKey}\n      disabled={!ethDmKeyPair || !waku}\n    >\n      Broadcast Eth-DM Public Key\n    </Button>\n  );\n}\n\nasync function encodePublicKeyWakuMessage(\n  publicKeyMessage: PublicKeyMessage\n): Promise<WakuMessage> {\n  const payload = publicKeyMessage.encode();\n  return await WakuMessage.fromBytes(payload, {\n    contentTopic: PublicKeyContentTopic,\n  });\n}\n","import React from 'react';\nimport { List, ListItem, ListItemText } from '@material-ui/core';\n\n/**\n * Clear text message\n */\nexport interface Message {\n  text: string;\n  timestamp: Date;\n}\n\nexport interface Props {\n  messages: Message[];\n}\n\nexport default function Messages({ messages }: Props) {\n  return <List dense={true}>{generate(messages)}</List>;\n}\n\nfunction generate(messages: Message[]) {\n  return messages.map((msg) => {\n    const text = `<${formatDisplayDate(msg.timestamp)}> ${msg.text}`;\n\n    return (\n      <ListItem>\n        <ListItemText key={formatDisplayDate(msg.timestamp)} primary={text} />\n      </ListItem>\n    );\n  });\n}\n\nfunction formatDisplayDate(timestamp: Date): string {\n  return timestamp.toLocaleString([], {\n    month: 'short',\n    day: 'numeric',\n    hour: 'numeric',\n    minute: '2-digit',\n    hour12: false,\n  });\n}\n","import {\n  FormControl,\n  InputLabel,\n  makeStyles,\n  MenuItem,\n  Select,\n  TextField,\n} from '@material-ui/core';\nimport React, { ChangeEvent, useState, KeyboardEvent } from 'react';\nimport { Waku, WakuMessage } from 'js-waku';\nimport { hexToBuf } from 'js-waku/lib/utils';\nimport { DirectMessage } from './wire';\nimport { DirectMessageContentTopic } from '../waku';\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nexport interface Props {\n  waku: Waku | undefined;\n  // address, public key\n  recipients: Map<string, string>;\n}\n\nexport default function SendMessage({ waku, recipients }: Props) {\n  const classes = useStyles();\n  const [recipient, setRecipient] = useState<string>('');\n  const [message, setMessage] = useState<string>();\n\n  const handleRecipientChange = (\n    event: ChangeEvent<{ name?: string; value: unknown }>\n  ) => {\n    setRecipient(event.target.value as string);\n  };\n\n  const handleMessageChange = (event: ChangeEvent<HTMLInputElement>) => {\n    setMessage(event.target.value);\n  };\n\n  const items = Array.from(recipients.keys()).map((recipient) => {\n    return (\n      <MenuItem key={recipient} value={recipient}>\n        {recipient}\n      </MenuItem>\n    );\n  });\n\n  const keyDownHandler = async (event: KeyboardEvent<HTMLInputElement>) => {\n    if (\n      event.key === 'Enter' &&\n      !event.altKey &&\n      !event.ctrlKey &&\n      !event.shiftKey\n    ) {\n      if (!waku) return;\n      if (!recipient) return;\n      if (!message) return;\n      const publicKey = recipients.get(recipient);\n      if (!publicKey) return;\n\n      sendMessage(waku, recipient, publicKey, message, (res) => {\n        if (res) {\n          console.log('callback called with', res);\n          setMessage('');\n        }\n      });\n    }\n  };\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        alignItems: 'center',\n        flexWrap: 'wrap',\n      }}\n    >\n      <FormControl className={classes.formControl}>\n        <InputLabel id=\"select-recipient-label\">Recipient</InputLabel>\n        <Select\n          labelId=\"select-recipient\"\n          id=\"select-recipient\"\n          value={recipient}\n          onChange={handleRecipientChange}\n        >\n          {items}\n        </Select>\n      </FormControl>\n      <TextField\n        id=\"message-input\"\n        label=\"Message\"\n        variant=\"filled\"\n        onChange={handleMessageChange}\n        onKeyDown={keyDownHandler}\n        value={message}\n      />\n    </div>\n  );\n}\n\nasync function encodeEncryptedWakuMessage(\n  message: string,\n  publicKey: string,\n  address: string\n): Promise<WakuMessage> {\n  const directMsg = new DirectMessage({\n    toAddress: hexToBuf(address),\n    message: message,\n  });\n\n  const payload = directMsg.encode();\n  return WakuMessage.fromBytes(payload, {\n    contentTopic: DirectMessageContentTopic,\n    encPublicKey: publicKey,\n  });\n}\n\nfunction sendMessage(\n  waku: Waku,\n  recipientAddress: string,\n  recipientPublicKey: string,\n  message: string,\n  callback: (res: boolean) => void\n) {\n  encodeEncryptedWakuMessage(message, recipientPublicKey, recipientAddress)\n    .then((msg) => {\n      console.log('pushing');\n      waku.lightPush\n        .push(msg)\n        .then((res) => {\n          console.log('Message sent', res);\n          callback(res ? res.isSuccess : false);\n        })\n        .catch((e) => {\n          console.error('Failed to send message', e);\n          callback(false);\n        });\n    })\n    .catch((e) => {\n      console.error('Cannot encode & encrypt message', e);\n      callback(false);\n    });\n}\n","import Messages, { Message } from './Messages';\nimport { Waku } from 'js-waku';\nimport SendMessage from './SendMessage';\nimport { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    alignItems: 'left',\n    flexDirection: 'column',\n    margin: '5px',\n  },\n});\n\ninterface Props {\n  waku: Waku | undefined;\n  recipients: Map<string, string>;\n  messages: Message[];\n}\n\nexport default function Messaging({ waku, recipients, messages }: Props) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <SendMessage recipients={recipients} waku={waku} />\n      <Messages messages={messages} />\n    </div>\n  );\n}\n","import '@ethersproject/shims';\n\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { Waku } from 'js-waku';\nimport { ethers } from 'ethers';\nimport { Signer } from '@ethersproject/abstract-signer';\nimport { KeyPair } from './crypto';\nimport { Message } from './messaging/Messages';\nimport 'fontsource-roboto';\nimport { AppBar, IconButton, Toolbar, Typography } from '@material-ui/core';\nimport KeyPairHandling from './key_pair_handling/KeyPairHandling';\nimport {\n  createMuiTheme,\n  ThemeProvider,\n  makeStyles,\n} from '@material-ui/core/styles';\nimport { teal, purple, green } from '@material-ui/core/colors';\nimport WifiIcon from '@material-ui/icons/Wifi';\nimport BroadcastPublicKey from './BroadcastPublicKey';\nimport Messaging from './messaging/Messaging';\nimport {\n  DirectMessageContentTopic,\n  handleDirectMessage,\n  handlePublicKeyMessage,\n  initWaku,\n  PublicKeyContentTopic,\n} from './waku';\n\ndeclare let window: any;\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: purple[500],\n    },\n    secondary: {\n      main: teal[600],\n    },\n  },\n});\n\nconst useStyles = makeStyles({\n  root: {\n    textAlign: 'center',\n    display: 'flex',\n    flexDirection: 'column',\n    minHeight: '100vh',\n  },\n  appBar: {\n    // height: '200p',\n  },\n  container: {\n    display: 'flex',\n    flex: 1,\n  },\n  main: {\n    flex: 1,\n    margin: '10px',\n  },\n  wakuStatus: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  peers: {},\n});\n\nfunction App() {\n  const [waku, setWaku] = useState<Waku>();\n  const [signer, setSigner] = useState<Signer>();\n  const [ethDmKeyPair, setEthDmKeyPair] = useState<KeyPair | undefined>();\n  const [publicKeys, setPublicKeys] = useState<Map<string, string>>(new Map());\n  const [messages, setMessages] = useState<Message[]>([]);\n  const [address, setAddress] = useState<string>();\n\n  const classes = useStyles();\n\n  useEffect(() => {\n    try {\n      window.ethereum\n        .request({ method: 'eth_requestAccounts' })\n        .then((accounts: string[]) => {\n          const _provider = new ethers.providers.Web3Provider(window.ethereum);\n          setAddress(accounts[0]);\n          setSigner(_provider.getSigner());\n        });\n    } catch (e) {\n      console.error('No web3 provider available');\n    }\n  }, [address, signer]);\n\n  // Waku initialization\n  useEffect(() => {\n    if (waku) return;\n    initWaku()\n      .then((_waku) => {\n        console.log('waku: ready');\n        setWaku(_waku);\n      })\n      .catch((e) => {\n        console.error('Failed to initiate Waku', e);\n      });\n  }, [waku]);\n\n  useEffect(() => {\n    if (!waku) return;\n    if (!address) return;\n\n    const observerPublicKeyMessage = handlePublicKeyMessage.bind(\n      {},\n      address,\n      setPublicKeys\n    );\n\n    waku.relay.addObserver(observerPublicKeyMessage, [PublicKeyContentTopic]);\n\n    return function cleanUp() {\n      if (!waku) return;\n      waku.relay.deleteObserver(observerPublicKeyMessage, [\n        PublicKeyContentTopic,\n      ]);\n    };\n  }, [waku, address]);\n\n  useEffect(() => {\n    if (!waku) return;\n    if (!ethDmKeyPair) return;\n\n    waku.relay.addDecryptionPrivateKey(ethDmKeyPair.privateKey);\n\n    return function cleanUp() {\n      if (!waku) return;\n      if (!ethDmKeyPair) return;\n\n      waku.relay.deleteDecryptionPrivateKey(ethDmKeyPair.privateKey);\n    };\n  }, [waku, ethDmKeyPair]);\n\n  useEffect(() => {\n    if (!waku) return;\n    if (!ethDmKeyPair) return;\n    if (!address) return;\n\n    const observerDirectMessage = handleDirectMessage.bind(\n      {},\n      setMessages,\n      ethDmKeyPair.privateKey,\n      address\n    );\n\n    waku.relay.addObserver(observerDirectMessage, [DirectMessageContentTopic]);\n\n    return function cleanUp() {\n      if (!waku) return;\n      if (!observerDirectMessage) return;\n      waku.relay.deleteObserver(observerDirectMessage, [\n        DirectMessageContentTopic,\n      ]);\n    };\n  }, [waku, address, ethDmKeyPair]);\n\n  let relayPeers = 0;\n  let lightPushPeers = 0;\n  if (waku) {\n    relayPeers = waku.relay.getPeers().size;\n    lightPushPeers = waku.lightPush.peers.length;\n  }\n\n  let addressDisplay = '';\n  if (address) {\n    addressDisplay =\n      address.substr(0, 6) + '...' + address.substr(address.length - 4, 4);\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div className={classes.root}>\n        <AppBar className={classes.appBar} position=\"static\">\n          <Toolbar>\n            <IconButton\n              edge=\"start\"\n              className={classes.wakuStatus}\n              aria-label=\"waku-status\"\n            >\n              <WifiIcon\n                color={waku ? undefined : 'disabled'}\n                style={waku ? { color: green[500] } : {}}\n              />\n            </IconButton>\n            <Typography className={classes.peers} aria-label=\"connected-peers\">\n              Peers: {relayPeers} relay, {lightPushPeers} light push\n            </Typography>\n            <Typography variant=\"h6\" className={classes.title}>\n              Ethereum Direct Message\n            </Typography>\n            <Typography>{addressDisplay}</Typography>\n          </Toolbar>\n        </AppBar>\n\n        <div className={classes.container}>\n          <main className={classes.main}>\n            <fieldset>\n              <legend>Eth-DM Key Pair</legend>\n              <KeyPairHandling\n                ethDmKeyPair={ethDmKeyPair}\n                setEthDmKeyPair={(keyPair) => setEthDmKeyPair(keyPair)}\n              />\n              <BroadcastPublicKey\n                signer={signer}\n                ethDmKeyPair={ethDmKeyPair}\n                waku={waku}\n              />\n            </fieldset>\n            <fieldset>\n              <legend>Messaging</legend>\n              <Messaging\n                recipients={publicKeys}\n                waku={waku}\n                messages={messages}\n              />\n            </fieldset>\n          </main>\n        </div>\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}